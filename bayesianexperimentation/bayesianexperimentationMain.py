# -*- coding: utf-8 -*-
'''
Script that generates and analyzes a synthetic set of PMS data. These data differ from the data used in the paper but
capture the important elements of what is presented in the paper.
Inference generation requires use of the logistigate package, available at https://logistigate.readthedocs.io/en/main/.
Running the generateSyntheticData() function generates Figures 2, 3, and 4, as well as the interval widths for Tables
1 and 2, that are analagous to the items produced using the de-identified data.
'''

from logistigate.logistigate import utilities as util # Pull from the submodule "develop" branch
from logistigate.logistigate import methods
from logistigate.logistigate import lg
import numpy as np
import scipy.special as sps
import matplotlib.pyplot as plt
import random
import pickle


def balancedesign(N,ntilde):
    '''
    Uses matrix of original batch (N) and next batch (ntilde) to return a balanced design where the target is an even
    number of tests from each (TN,SN) arc for the total tests done
    '''
    n = np.sum(N)
    r,c = N.shape
    D = np.repeat(1/(r*c),r*c)*(n+ntilde)
    D.shape = (r,c)
    D = D - N
    D[D < 0] = 0.
    D = D/np.sum(D)

    return D

def roundDesignLow(D,n):
    '''
    Takes a proposed design, D, and number of new tests, n, to produce an integer tests array by removing tests from
    design traces with the highest number of tests or adding tests to traces with the lowest number of tests.
    '''
    roundMat = np.round(n*D)
    if np.sum(roundMat) > n: # Too many tests; remove from highest represented traces
        roundMat = roundMat.flatten()
        sortinds = np.argsort(-roundMat,axis=None).tolist()
        for removeInd in range(int(np.sum(roundMat)-n)):
            roundMat[sortinds[removeInd]] += -1
        roundMat = roundMat.reshape(D.shape[0],D.shape[1])
    elif np.sum(roundMat) < n: # Too few tests; add to lowest represented traces
        roundMat = roundMat.flatten()
        sortinds = np.argsort(roundMat, axis=None).tolist()
        for addind in range(int(n-np.sum(roundMat))):
            roundMat[sortinds[addind]] += 1
        roundMat = roundMat.reshape(D.shape[0],D.shape[1])
    return roundMat

def roundDesignHigh(D,n):
    '''
    Takes a proposed design, D, and number of new tests, n, to produce an integer tests array by removing tests from
    design traces with the lowest number of tests or adding tests to traces with the highest number of tests.
    '''
    roundMat = np.round(n*D)
    if np.sum(roundMat) > n: # Too many tests; remove from lowest represented traces
        roundMat = roundMat.flatten()
        sortinds = np.argsort(roundMat,axis=None).tolist()
        for removeInd in range(int(np.sum(roundMat)-n)):
            roundMat[sortinds[removeInd]] += -1
        roundMat = roundMat.reshape(D.shape[0],D.shape[1])
    elif np.sum(roundMat) < n: # Too few tests; add to highest represented traces
        roundMat = roundMat.flatten()
        sortinds = np.argsort(-roundMat, axis=None).tolist()
        for addind in range(int(n-np.sum(roundMat))):
            roundMat[sortinds[addind]] += 1
        roundMat = roundMat.reshape(D.shape[0],D.shape[1])
    return roundMat


def marginalshannoninfo(datadict):
    '''
    Takes a PMS data set and returns a matrix of the Shannon information obtained from a marginal test along each trace;
    for tracked data only
    '''
    tnNum, snNum = datadict['N'].shape
    s, r = datadict['diagSens'], datadict['diagSpec']
    postSamps = datadict['postSamples']

    shannonMat = np.zeros(shape=(tnNum, snNum))

    for samp in postSamps: # Iterate through each posterior sample
        for tnInd in range(tnNum):
            tnRate = samp[tnInd + snNum]
            for snInd in range(snNum):
                snRate = samp[snInd]
                consolRate = tnRate + (1-tnRate)*snRate
                detectRate = s*consolRate+(1-r)*(1-consolRate)
                infobit = detectRate*np.log(detectRate) + (1-detectRate)*np.log(detectRate)
                shannonMat[tnInd,snInd] += infobit

    shannonMat=shannonMat/len(postSamps)
    return shannonMat

def bayesianexample1():
    '''
    Use a small example to find the utility from different sampling designs.
    '''

    # Define squared loss function
    def lossfunc1(est,param):
        return np.linalg.norm(est-param,2)

    # Designate number of test and supply nodes
    numTN = 3
    numSN = 2
    s, r = 1., 1.

    # Generate a supply chain
    exampleDict = util.generateRandDataDict(numImp=numSN, numOut=numTN, diagSens=s, diagSpec=r, numSamples=40,
                                            dataType='Tracked',randSeed=24,trueRates=[0.5,0.05,0.1,0.08,0.02])
    exampleDict['diagSens'] = s # bug from older version of logistigate that doesn't affect the data
    exampleDict['diagSpec'] = r

    exampleDict = util.GetVectorForms(exampleDict)

    # Add a prior
    exampleDict['prior'] = methods.prior_normal()
    exampleDict['numPostSamples'] = 1000
    exampleDict['MCMCdict'] = {'MCMCtype': 'NUTS', 'Madapt': 5000, 'delta': 0.4}
    exampleDict['importerNum'] = numSN
    exampleDict['outletNum'] = numTN

    # Store the sourcing probability matrix; assume Q is known, but it could be estimated otherwise
    #Q = exampleDict['transMat']

    # Summarize the data results
    #N_init = exampleDict['N']
    #Y_init = exampleDict['Y']

    # Generate posterior draws
    exampleDict = methods.GeneratePostSamples(exampleDict)

    # Different designs
    design1 = np.array([1., 0., 0.])
    design2 = np.array([0., 1., 0.])
    design3 = np.array([0., 0., 1.])
    design4 = np.array([0.4, 0.3, 0.3])
    design5 = np.array([0., 0.5, 0.5])

    ##################################
    ########## REMOVE LATER ##########
    ##################################
    priordatadict = exampleDict.copy()
    estdecision = 'mean'
    numtests = 8
    design = design5.copy()
    lossfunc = lossfunc1

    def bayesutility(priordatadict, lossfunc, estdecision, design, numtests, omeganum):
        '''
        priordatadict: should have posterior draws from initial data set already included
        estdecision: how to form a decision from the posterior samples; one of 'mean', 'mode', or 'median'
        design: a sampling probability vector along all test nodes
        numtests: how many samples will be obtained under the design
        '''

        omeganum = 100    # UPDATE

        (numTN, numSN) = priordatadict['N'].shape
        Q = priordatadict['transMat']
        s, r = priordatadict['diagSens'], priordatadict['diagSpec']

        # Retrieve prior draws
        priordraws = priordatadict['postSamples']

        # Store utility for each omega in an array
        utilityvec = []

        for omega in range(omeganum):
            # Initialize samples to be drawn from test nodes, per the design
            TNsamps = np.round(numtests * design)
            # Grab a draw from the prior
            currpriordraw = priordraws[np.random.choice(priordraws.shape[0], size=1)[0]] # [SN rates, TN rates]
            # Initialize Ntilde and Ytilde
            Ntilde = np.zeros(shape = priordatadict['N'].shape)
            Ytilde = Ntilde.copy()

            while np.sum(TNsamps) > 0.:
                index = [i for i, x in enumerate(TNsamps) if x > 0]
                currTNind = index[0]
                TNsamps[currTNind] -= 1
                # Randomly choose the supply node, per Q
                currSNind = np.random.choice(np.array(list(range(numSN))),size=1,p=Q[currTNind])[0]
                # Generate test result
                currTNrate = currpriordraw[numSN+currTNind]
                currSNrate = currpriordraw[currSNind]
                currrealrate = currTNrate + (1-currTNrate)*currSNrate # z_star for this sample
                currposrate = s*currrealrate+(1-r)*(1-currrealrate) # z for this sample
                result = np.random.binomial(1, p=currposrate)
                Ntilde[currTNind, currSNind] += 1
                Ytilde[currTNind, currSNind] += result

            # We have a new set of data d_tilde
            Nomega = priordatadict['N'] + Ntilde
            Yomega = priordatadict['Y'] + Ytilde

            postdatadict = priordatadict.copy()
            postdatadict['N'] = Nomega
            postdatadict['Y'] = Yomega

            postdatadict = methods.GeneratePostSamples(postdatadict)
            # Get mean of samples as estimate
            currSamps = sps.logit(postdatadict['postSamples'])

            if estdecision == 'mean':
                logitmeans = np.average(currSamps,axis=0)
                currEst = sps.expit(logitmeans)

            # Average loss for all postpost samples
            avgloss = 0
            for currsamp in postdatadict['postSamples']:
                currloss = lossfunc(currEst,currsamp)
                avgloss += currloss
            avgloss = avgloss/len(postdatadict['postSamples'])

            #Append to utility storage vector
            utilityvec.append(avgloss)

        utilvalue = np.average(utilityvec)
        utilsd = np.std(utilityvec)



        return utilvalue, utilsd, utilvalue-2*utilsd,utilvalue+2*utilsd


    return

def bayesianexample2():
    '''
    Use paper example to find the utility from different sampling designs; in this case, we can choose the full trace,
    i.e., we can choose the test node and supply node .
    '''

    # Define squared loss function
    def lossfunc1(est,param):
        return np.linalg.norm(est-param,2)

    # Define classification loss function with threshold t
    def lossfunc2(est,param,t):
        estClass = np.array([1 if est[i]>=t else 0 for i in range(len(est))])
        paramClass = np.array([1 if param[i]>=t else 0 for i in range(len(param))])
        return np.linalg.norm(estClass-paramClass,1)

    # Designate number of test and supply nodes
    numTN = 3
    numSN = 2
    # Designate testing accuracy
    s, r = 1., 1.
    # Designate the true SFP rates
    trueSFPrates = [0.5,0.05,0.1,0.08,0.02]

    # Generate a supply chain
    exampleDict = util.generateRandDataDict(numImp=numSN, numOut=numTN, diagSens=s, diagSpec=r, numSamples=0,
                                            dataType='Tracked',randSeed=86,trueRates=trueSFPrates)
    exampleDict['diagSens'] = s # bug from older version of logistigate that doesn't affect the data
    exampleDict['diagSpec'] = r

    exampleDict = util.GetVectorForms(exampleDict)
    # Populate N and Y with numbers from paper example
    exampleDict['N'] = np.array([[6, 11], [12, 6], [2, 13]])
    exampleDict['Y'] = np.array([[3, 0], [6, 0], [0, 0]])

    # Add a prior
    exampleDict['prior'] = methods.prior_normal()
    exampleDict['numPostSamples'] = 1000
    exampleDict['MCMCdict'] = {'MCMCtype': 'NUTS', 'Madapt': 5000, 'delta': 0.4}
    exampleDict['importerNum'] = numSN
    exampleDict['outletNum'] = numTN

    # Store the sourcing probability matrix; assume Q is known, but it could be estimated otherwise
    #Q = exampleDict['transMat']

    # Summarize the data results
    #N_init = exampleDict['N']
    #Y_init = exampleDict['Y']

    # Generate posterior draws
    exampleDict = methods.GeneratePostSamples(exampleDict)

    # Different designs; they take matrix form as the traces can be selected directly
    design0 = np.array([[0., 0.], [0., 0.], [0., 0.]])
    design1 = np.array([[0., 0.], [0., 0.], [1., 0.]])
    design2 = np.array([[1/3, 0.], [1/3, 1/3], [0., 0.]])
    design3 = np.array([[1/3, 0.], [1/3, 0.], [1/3, 0.]])
    design4 = np.array([[0., 0.], [0., 0.], [0., 1.]])
    design5 = np.array([[1/6, 1/6], [1/6, 1/6], [1/6, 1/6]])
    design6_6 = balancedesign(exampleDict['N'],6)
    design6_30 = balancedesign(exampleDict['N'],30)

    ###############################################
    ########## REMOVE LATER #######################
    # FOR USING WITH THE FUNCTION WHILE CODING IT #
    ###############################################
    priordatadict = exampleDict.copy()
    #priordraws = priordatadict['postSamples']
    #import pickle
    #import os
    #outputFilePath = os.getcwd()
    #outputFileName = os.path.join(outputFilePath, 'priordraws')
    #pickle.dump(priordraws, open(outputFileName, 'wb'))

    import pickle
    import os
    priordraws=pickle.load(open(os.path.join(os.getcwd(), 'priordraws'),'rb'))
    numtests = 30
    design = design6_30.copy()
    estdecision = 'mode'
    t = 0.1
    lossfunc = lossfunc2

    random.seed(35)
    randinds = random.sample(range(0,1000),100)

    def bayesutility(priordatadict, lossfunc, estdecision, design, numtests, omeganum, t=0.1):
        '''
        priordatadict: should have posterior draws from initial data set already included
        estdecision: how to form a decision from the posterior samples; one of 'mean', 'mode', or 'median'
        design: a sampling probability vector along all test nodes
        numtests: how many samples will be obtained under the design
        '''

        # Retrieve prior draws
        #priordraws = priordatadict['postSamples']

        omeganum = 100    # UPDATE

        (numTN, numSN) = priordatadict['N'].shape
        Q = priordatadict['transMat']
        s, r = priordatadict['diagSens'], priordatadict['diagSpec']

        # Store loss for each omega in an array
        lossvec = []

        # Initialize samples to be drawn from traces, per the design
        sampMat = roundDesignLow(design,numtests)

        for omega in range(omeganum):

            TNsamps = sampMat.copy()
            # Grab a draw from the prior
            #currpriordraw = priordraws[np.random.choice(priordraws.shape[0], size=1)[0]] # [SN rates, TN rates]
            currpriordraw = priordraws[randinds[omega]]  # [SN rates, TN rates]
            # Initialize Ntilde and Ytilde
            Ntilde = np.zeros(shape = priordatadict['N'].shape)
            Ytilde = Ntilde.copy()

            while np.sum(TNsamps) > 0.:
                # Go to first non-empty row of TN samps
                i, j = 0, 0
                while np.sum(TNsamps[i])==0:
                    i += 1
                # Go to first non-empty column of this row
                while TNsamps[i][j]==0:
                    j += 1
                TNsamps[i][j] -= 1
                # Generate test result
                currTNrate = currpriordraw[numSN+i]
                currSNrate = currpriordraw[j]
                currrealrate = currTNrate + (1-currTNrate)*currSNrate # z_star for this sample
                currposrate = s*currrealrate+(1-r)*(1-currrealrate) # z for this sample
                result = np.random.binomial(1, p=currposrate)
                Ntilde[i, j] += 1
                Ytilde[i, j] += result

            # We have a new set of data d_tilde
            Nomega = priordatadict['N'] + Ntilde
            Yomega = priordatadict['Y'] + Ytilde

            postdatadict = priordatadict.copy()
            postdatadict['N'] = Nomega
            postdatadict['Y'] = Yomega

            postdatadict = methods.GeneratePostSamples(postdatadict)
            # Get mean of samples as estimate
            currSamps = sps.logit(postdatadict['postSamples'])

            if estdecision == 'mean':
                logitmeans = np.average(currSamps,axis=0)
                currEst = sps.expit(logitmeans)
            elif estdecision == 'mode':
                currEst = np.array([1 if np.sum(currSamps[:,i]>sps.logit(t))>=(len(currSamps[:,i])/2) else 0 for i in range(numSN+numTN) ])


            # Average loss for all postpost samples
            avgloss = 0
            for currsamp in postdatadict['postSamples']:
                if estdecision == 'mean':
                    currloss = lossfunc(currEst,currsamp)
                elif estdecision == 'mode':
                    currloss = lossfunc(currEst,currsamp,t)
                avgloss += currloss
            avgloss = avgloss/len(postdatadict['postSamples'])

            #Append to utility storage vector
            lossvec.append(avgloss)
            print('omega '+str(omega) + ' complete')

        lossval = np.average(lossvec)
        losssd = np.std(lossvec)




        return lossval, losssd, lossval-2*losssd, lossval+2*losssd



'''
# Put loss value data as vectors below; this will generate a set of histograms
# FOR 3 TESTS WITH ALIGNED PRIOR DRAWS
lvec1 = [0.13047196168170846, 0.1276038264408392, 0.12449235844276779, 0.13217349422523322, 0.1354759528148989, 0.1360142621802269, 0.12939067614673927, 0.1286761730177714, 0.14169743569010873, 0.12778910630973087, 0.12480889050669584, 0.1349795282762828, 0.12707302246784827, 0.1302957948436728, 0.13157428686120592, 0.14644515788152665, 0.1256991893306132, 0.13194174128845973, 0.12540158735569396, 0.1306203436741542, 0.14261781696505488, 0.150280893284013, 0.14041038641070372, 0.12348282614396186, 0.125911845549212, 0.13469509047043055, 0.135752134309431, 0.13662644692994802, 0.1254239544910863, 0.12405392996605177, 0.1479332529407039, 0.1301525637862641, 0.13497285555377378, 0.15006052733905945, 0.13569726059359477, 0.1522005031687532, 0.13404841406693055, 0.14696558817453664, 0.12978124744622593, 0.1441451377717851, 0.13625775638361956, 0.12837295653070918, 0.12838887495178292, 0.12764654396269842, 0.1300896357023657, 0.12890125184470347, 0.1324589416735074, 0.1324589416735074, 0.15617817508483378, 0.13305267644520485, 0.13021117513543903, 0.1252221764041104, 0.12971953381482387, 0.13302782557514592, 0.1292101726489508, 0.12944675178905107, 0.13495145483950105, 0.1454534859133748, 0.12993801064495875, 0.12462455689054089, 0.137885930960764, 0.12927953773801315, 0.14186420034657476, 0.12448797474967636, 0.14424700849684968, 0.13377822799246095, 0.12956186433758862, 0.1298119199754846, 0.14365063236204537, 0.1433258367246212, 0.14166468096134932, 0.14329245911306435, 0.13570369538569574, 0.1345784605734944, 0.13115039046122184, 0.13679824568726018, 0.13533205174111768, 0.13462419117133795, 0.1287867130550015, 0.13988172816736003, 0.1369139316205147, 0.12329925549938892, 0.13813520486908826, 0.12443559097337117, 0.13126097231720898, 0.14009128941725005, 0.14122534946237164, 0.13287131388033596, 0.11888576012907849, 0.12684374243485486, 0.13216098467054446, 0.12408401197129885, 0.1469222731480437, 0.15100287401554233, 0.1383834377262981, 0.1508454309423051, 0.13058567424510278, 0.1449475078236815, 0.1493445085993241, 0.12616948030359015]
lvec2 = [0.12754209193762045, 0.14031219720978916, 0.13010100439884947, 0.1327246470991515, 0.1332488070741414, 0.17785684814211353, 0.12842574463210446, 0.13181677560053628, 0.1343499195285006, 0.1323374633661742, 0.12836862511602445, 0.13001859567488736, 0.1365527321797588, 0.12775634414907083, 0.14580346329980734, 0.1640785189966381, 0.1311423007944489, 0.13223061726192142, 0.12767395998354436, 0.12429207661021083, 0.1265604764724026, 0.13072937443355737, 0.15671777269777182, 0.12514181892215678, 0.13168644644057526, 0.16274530137939722, 0.16654474484115633, 0.1316258004074624, 0.12731853589008554, 0.13304878913448515, 0.16877064424013738, 0.14011507180814017, 0.13192862095566837, 0.13519505789846187, 0.13002509201899204, 0.13168205990715817, 0.12994389799319672, 0.13038181706740126, 0.13431882708195128, 0.13746970899234498, 0.13539540264916458, 0.13487973988967866, 0.12997782849544973, 0.13673316854940076, 0.1307450174830862, 0.1371005133585724, 0.13924090501043032, 0.13838798514314493, 0.134923406337216, 0.12614519075546998, 0.133023593322859, 0.12576895927705714, 0.13105501260078514, 0.130107013636262, 0.12582858636922473, 0.17248682902645737, 0.1325208788030812, 0.14588921081877704, 0.13541096684538162, 0.1342599964292524, 0.13001699237686787, 0.12756441777691874, 0.13031295552831842, 0.13244792060846697, 0.13228096472940035, 0.12502263561973484, 0.17986885944768705, 0.13162725440466186, 0.13752168808162005, 0.1331347506159003, 0.12797199847337623, 0.1434561233452652, 0.12900276797441673, 0.12992678684060696, 0.1408798044821269, 0.13503855240312046, 0.13693097439732002, 0.12402673487666072, 0.130582714215785, 0.12063979073675954, 0.13055935152289774, 0.13478958511820552, 0.13278513683197604, 0.13339851346118609, 0.13348580758961437, 0.13039165311990222, 0.13077245124761644, 0.13943728199506442, 0.16571263533012898, 0.16363749427459032, 0.1643298773941419, 0.13035993493446266, 0.13451805163720365, 0.12891800101853534, 0.1673501251232175, 0.1319185405640334, 0.14611467424401084, 0.13875906340601532, 0.14211957771532613, 0.14369715743805525]
lvec3 = [0.13697764582012645, 0.12675526883520252, 0.1308251030754902, 0.1408067592248919, 0.12597841552729494, 0.13353369491755498, 0.12429832403437134, 0.13709863103925737, 0.13141996233451253, 0.13085683801927164, 0.131841415917466, 0.13173386238128823, 0.1401340965206679, 0.13324231403453868, 0.13936384861638426, 0.12560101659332082, 0.13580229493907667, 0.133666761503803, 0.12943125269234088, 0.13207189228981028, 0.13642282124061, 0.13462831586183321, 0.127763082680329, 0.13511421110192526, 0.1361333002340311, 0.13597872713804882, 0.14593994372250554, 0.15183977649734026, 0.13044317617938794, 0.134250313662532, 0.13835344794064533, 0.14409107773328075, 0.14061087861520152, 0.12354667007835678, 0.13079558927052282, 0.13009358252378478, 0.13288300606106693, 0.13288300606106693, 0.1337398123298732, 0.13817381445437968, 0.1267033116857319, 0.13501292647925223, 0.145885252133139, 0.12907969312912632, 0.13110323976246913, 0.12761127506408187, 0.11948756266658803, 0.13229452870205766, 0.13646942055844247, 0.13120594005088243, 0.12920145379022513, 0.1351595719685953, 0.14063366039188874, 0.1308125333038432, 0.1519291067594185, 0.1482402111817438, 0.12844284976192133, 0.12929512895939857, 0.12444294177057715, 0.13797803707748096, 0.14169078361098578, 0.12765417575956856, 0.12374824898093927, 0.13663097521203463, 0.13621719862915177, 0.13814639573711598, 0.13318106231629007, 0.1519677075463462, 0.13822681273026283, 0.13469370661433747, 0.14196219996850246, 0.142127274583187, 0.1410232360463834, 0.12847845669028682, 0.13431374906200821, 0.14252571697309935, 0.14481582602784168, 0.12689537302651258, 0.12226290284133942, 0.1443536892393676, 0.1254594853135468, 0.14117895600672078, 0.13256151218842954, 0.1268591399355791, 0.14448117338334976, 0.12930964020146546, 0.1328649287609819, 0.14108330586916737, 0.12993659975971897, 0.13038081242281513, 0.12263687279953689, 0.12906569669579687, 0.13197722926338046, 0.13142804989471524, 0.1272496162487525, 0.13990288456384065, 0.13490202565031886, 0.12521477015095855, 0.12639177772762686, 0.13212715475633424]
lvec4 = [0.13786484978656838, 0.13737504032389106, 0.13655960150728405, 0.13863506287719363, 0.1390705581703513, 0.13977357195661486, 0.13907779150128435, 0.14154022665594576, 0.1341428958677076, 0.14274229913887965, 0.135153287130241, 0.13105271863771872, 0.14252757080839124, 0.13738626083669195, 0.13692611022857448, 0.14374513437638084, 0.14483457186159396, 0.14155897391354638, 0.1359188473783265, 0.13706101460831738, 0.13979885002825704, 0.1415448141063927, 0.1313137305255705, 0.15089531512472276, 0.14429036742745727, 0.1422959481561467, 0.13881377708645065, 0.14029047321001678, 0.13663518876925432, 0.13590736367712508, 0.13677835712305578, 0.13793841714606353, 0.13944242873000565, 0.14007611697718456, 0.1403639882260881, 0.14252672568755467, 0.1353562891255248, 0.14171960127549904, 0.1293170272823765, 0.1346095532222456, 0.13931966248063582, 0.14410737993848613, 0.14382654677774667, 0.14309952551247734, 0.14324284516840627, 0.1365172388969145, 0.14693616687805508, 0.1414564994448689, 0.13876599367433967, 0.13672233725027796, 0.13487708835001072, 0.1445853558104675, 0.13404210108078896, 0.141401212149338, 0.14729279447728044, 0.14872641605297127, 0.1350632140860931, 0.13647976400541914, 0.14088595875175142, 0.13318518358188056, 0.16420408628338357, 0.1348311628333333, 0.14355908259605457, 0.13879174555266596, 0.13764593885442333, 0.14494549026829537, 0.13372496095454733, 0.13925238276068996, 0.13650616726144724, 0.14729058860536992, 0.13443419227721867, 0.14140015437626002, 0.1302318793690348, 0.13556130371659977, 0.1399566138881258, 0.13641516955200297, 0.13717972701081507, 0.1571722438889038, 0.14797517506393126, 0.1319165765189502, 0.1398382095139937, 0.13512441449526305, 0.14837752413841238, 0.13551783243615612, 0.1513266725791105, 0.13797378141194655, 0.141447393548898, 0.1424173974230253, 0.1424173974230253, 0.13861080825626898, 0.1369953352796346, 0.1410452656391854, 0.13453307065354014, 0.14136567133337186, 0.14829498270715696, 0.1369190196918488, 0.14002214895370355, 0.1437387639043145, 0.13225607654813218, 0.13527140622812006]


bins = np.linspace(0.05, 0.2, 100)
fig, axs = plt.subplots(4,figsize=(5,9))
plt.rcParams["figure.autolayout"] = True
axs[0].hist(lvec1, bins, alpha=0.5, color='red', label='Design 1')
axs[1].hist(lvec2, bins, alpha=0.5, color='green', label='Design 2')
axs[2].hist(lvec3, bins, alpha=0.5, color='blue', label='Design 3')
axs[3].hist(lvec4, bins, alpha=0.5, color='gray', label='Design 4')
axs[0].set_title('Design 1')
axs[1].set_title('Design 2')
axs[2].set_title('Design 3')
axs[3].set_title('Design 4')
for i in range(4):
    axs[i].set_ylim([0,20])
fig.tight_layout()
fig.suptitle('Bayesian loss: 3 tests, Omega=100',fontsize=14)
plt.show()

'''

'''
# Put loss value data as vectors below; this will generate a set of histograms
# FOR 30 TESTS WITH ALIGNED PRIOR DRAWS
lvec0 = [0.14335674740847668, 0.13563245422451242, 0.1415963480854923, 0.14477842127227447, 0.1403673820567332, 0.14422281864161265, 0.14329261560423487, 0.1420062342037913, 0.14433295208263913, 0.1403238089040552, 0.13622023914021908, 0.1331215477563341, 0.13985955261052357, 0.13625107480023418, 0.13278830969158803, 0.15104810337007638, 0.1432066934207097, 0.14654590113820598, 0.14155140609144773, 0.13852272271124094, 0.13445127898827322, 0.13908978650635498, 0.1360373375312127, 0.13526163120094575, 0.13351511475872638, 0.1392834993888565, 0.14217784089826874, 0.1377067146937541, 0.13608336613577093, 0.13836213835655492, 0.1425563771081175, 0.13701890404704872, 0.14275701547310093, 0.14037446661784928, 0.135899731846271, 0.14472193099297048, 0.14004487852829342, 0.14100806934369722, 0.13803489989603657, 0.13771365713309786, 0.14139179718653286, 0.13087720270484154, 0.13903043764659487, 0.1451529118187262, 0.14357323831263982, 0.14277614431056324, 0.13806245145666834, 0.1390161454589516, 0.13787407260580362, 0.1298548333936015, 0.1286585066046738, 0.13813220094369869, 0.13870075098025772, 0.134798114071913, 0.14181892280318806, 0.14415150594437046, 0.1401707511122268, 0.13713175719384266, 0.13294292602440483, 0.13685260067190896, 0.14083582503649433, 0.14136240031126082, 0.137865717839781, 0.13393002615490654, 0.1427531689634655, 0.13538762826838718, 0.1496264644252375, 0.13540613334631685, 0.14101331288050714, 0.14671835743546532, 0.14478887242738706, 0.14931950638902403, 0.13283790393728137, 0.12970826512223263, 0.13796919743108113, 0.138645518281725, 0.1376171622310323, 0.13691141612588123, 0.14049677187086496, 0.13977659698381142, 0.13564191745044885, 0.13998212469718388, 0.14584815842274426, 0.14039224867696098, 0.13309154841127116, 0.1440026953609819, 0.1417341702439205, 0.14080983152552431, 0.14814505856180918, 0.1409467537003577, 0.1427572188544298, 0.13285891774806471, 0.13551388876899503, 0.15248278741427487, 0.1405290826335275, 0.13718595570106867, 0.13974116032513081, 0.13990250040610652, 0.1365994485550459, 0.1423325398989005]
lvec1 = [0.10634961174656275, 0.10302512056824153, 0.10573264203096888, 0.10940710352094114, 0.1079996198537457, 0.11386740538578519, 0.10339574572939116, 0.11705737348112238, 0.1046042481657203, 0.09925637880479482, 0.10425024005195677, 0.10352373313627466, 0.10063670495558483, 0.10799571446493482, 0.10836126822711473, 0.12051487450224642, 0.1045375314987425, 0.10439329799781122, 0.10268174950658925, 0.11234612369685851, 0.11234612369685851, 0.11800333845717682, 0.10418129588512696, 0.09703525486762068, 0.11616352612463957, 0.107728523136265, 0.11633564096686878, 0.14649054407733408, 0.10344308352390195, 0.10115707730680844, 0.10282231132299667, 0.10199820867319392, 0.11032410876508615, 0.10706950609289534, 0.10585915421202698, 0.1021843099315789, 0.10141639972518424, 0.10633943015662597, 0.1221172424682917, 0.10957372366455317, 0.13957032579483666, 0.10611496993096368, 0.10990296947641609, 0.11629037552378135, 0.10612435791561563, 0.10242963152014234, 0.10585724486168423, 0.09904601046902506, 0.10417078282127863, 0.11948214224211381, 0.1022160665374903, 0.1003382119019552, 0.12185635853549258, 0.10433125333239412, 0.10762830180763937, 0.1077274211549446, 0.10323979689185256, 0.10958942997651802, 0.10744930711459766, 0.10439667181367551, 0.10586832207215371, 0.10450362736603448, 0.1071311510626874, 0.10542673990664103, 0.10303039852242575, 0.10603698598299861, 0.1106886958276474, 0.11195802212106028, 0.11213153776026705, 0.10369695483929618, 0.09954381801274868, 0.12097884178410417, 0.12277409961119393, 0.09990737564843913, 0.11338768289126687, 0.15036613871870752, 0.10582848369463524, 0.10609097453062596, 0.12057525824788429, 0.127423256991933, 0.09972793858494255, 0.10598418649068067, 0.10864586614576892, 0.09884469447717312, 0.10904726369610386, 0.10290399590203675, 0.12341221567552675, 0.11093605699657906, 0.10921650225520371, 0.10144867949049492, 0.10277198535904514, 0.10424750829055592, 0.1632766996357331, 0.10662150026302795, 0.11551713425926377, 0.10258832038145932, 0.12703072288637893, 0.13534176208647325, 0.10638320675903544, 0.11408565414293617]
lvec2 = [0.08846907100334117, 0.12204653405437324, 0.11134160642351906, 0.138984542650809, 0.1337369860752422, 0.1371240842789891, 0.0971554324870248, 0.09958346985577195, 0.10070951154512953, 0.1303105442447949, 0.09523713865503293, 0.10023565081432302, 0.13808120389705528, 0.09258572338941401, 0.09535686158262739, 0.0989405020611249, 0.0977509560559939, 0.09233369659043171, 0.09186502887081881, 0.10229916568694297, 0.10446139081607504, 0.09833252948729544, 0.09370073654768755, 0.10118830212537351, 0.10323801562791826, 0.09571028646088366, 0.11641418219671133, 0.1001482614667568, 0.0970847128224121, 0.1214891701670199, 0.133204534038947, 0.09815319755985254, 0.1002936933775179, 0.11256089490548762, 0.09745801905562622, 0.11601971501035156, 0.10962601346989359, 0.0933793220288433, 0.09331437554207622, 0.09077959285606141, 0.15245414818948413, 0.09419395594480588, 0.09706474617576887, 0.10008984062064338, 0.14960513112981558, 0.0951139581791243, 0.09516114169655121, 0.09495360874139615, 0.14297128761257477, 0.11420523895286804, 0.09338834414834506, 0.09487621972156311, 0.1503284823843334, 0.09709529172952934, 0.13974139242667244, 0.11358824745871843, 0.09634722324888377, 0.09585720856835372, 0.12350946577094911, 0.11036323660636903, 0.1060997456805723, 0.10028146661742278, 0.09501072192079588, 0.09744867882438121, 0.08642881123426427, 0.0958143651785655, 0.10959436859020148, 0.09085354258311089, 0.09891157466466459, 0.10923513897563925, 0.110797370644161, 0.0971066933944853, 0.09544757522873497, 0.09315381629647514, 0.10715618252977116, 0.1432884402439888, 0.10187255512044427, 0.09537034747487716, 0.11201339933751868, 0.09471477295529196, 0.1017373734719954, 0.09404799962512932, 0.09740298340522555, 0.1067236592961917, 0.1205748753679981, 0.09882357772764515, 0.10667669622767387, 0.09924358806975918, 0.0990024738621961, 0.12995829286857116, 0.11779277896907878, 0.12233044145918576, 0.11989642326551032, 0.0952712402594451, 0.09815837555355965, 0.10329483010975068, 0.09749041083852679, 0.10662786973651314, 0.11014263299374114, 0.09905529546390655]
lvec3 = [0.11098974193332863, 0.10125051232420816, 0.11315345875479645, 0.14824849585948016, 0.12366359215833488, 0.11542909714969321, 0.10183381102989159, 0.10263148538154584, 0.11148631710088726, 0.1084937101564695, 0.10550927756678886, 0.09857013666010819, 0.11347462151166492, 0.11638102843486009, 0.14953441205466078, 0.16984221819246018, 0.16984221819246018, 0.11434691923912824, 0.11744327488708049, 0.12382928134932471, 0.10135108238722856, 0.10646095088922433, 0.11267174450693104, 0.10452698377828328, 0.09998643667474148, 0.10841215679858358, 0.11654286146832589, 0.11325844282086751, 0.12314719169286412, 0.09956359434182292, 0.11888835431978494, 0.10188299816254247, 0.10582320905400318, 0.1043406496092699, 0.10044141640207754, 0.10077252305876916, 0.10049698796349667, 0.09740979559291969, 0.10236601308361748, 0.10659814250463902, 0.15247726856568197, 0.09919174837610781, 0.10163849402694841, 0.11481432724190282, 0.10856790094035465, 0.1114748956445173, 0.10352971388114812, 0.10858561442707555, 0.12329119948704052, 0.11064231694477107, 0.1027685207630217, 0.11217936643228103, 0.11234530737792149, 0.09478842508698913, 0.10700042430667996, 0.11645010937684662, 0.12705002168750693, 0.10700045503345265, 0.11048688365719368, 0.1090621431847006, 0.10319468604112218, 0.1043909446429444, 0.1173314403933393, 0.11883522071079118, 0.10665173334224833, 0.10028275085055974, 0.1372634290037096, 0.11168466708454744, 0.10517656102771333, 0.12288115764386295, 0.11296476127238188, 0.09948237746650039, 0.12040098137010717, 0.09620255719752412, 0.1270244262138782, 0.134629257064983, 0.11153118939648016, 0.10603054028747022, 0.1024523685893314, 0.10412519688945349, 0.10922092562882185, 0.10514128052629228, 0.10603737019736942, 0.09567766033447421, 0.14466657664118415, 0.0984397089939447, 0.10132508254875486, 0.09823073295612572, 0.09847154149921909, 0.1410335938381654, 0.114412858617555, 0.11721596504756412, 0.15588738400060143, 0.16126500233961147, 0.10722058087143405, 0.1121644342687555, 0.10912254820238977, 0.11219291217967348, 0.10065879564721798, 0.0999875760494058]
lvec4 = [0.12755901234498981, 0.1272227641499066, 0.14367923011504508, 0.13053818512938012, 0.1354029707310704, 0.1298842528575228, 0.13556599561283753, 0.12882711757260126, 0.14423171736957027, 0.13096163052233253, 0.12770621594889955, 0.14030751852218828, 0.14035633491785288, 0.13114531238772126, 0.1331719733120443, 0.13567356195481461, 0.1490404304901742, 0.13030520418802785, 0.1387610294589461, 0.13984289095763378, 0.1324402782954368, 0.13172723443993992, 0.14829909361158036, 0.1434638988868053, 0.1307147339895076, 0.13369199138321494, 0.133805303387655, 0.1383671861895898, 0.13434287759205907, 0.13730766604181655, 0.14429296983483866, 0.13605026543510354, 0.1315971516370006, 0.1309955346472841, 0.14759889104242496, 0.14452508582904147, 0.13526105980782366, 0.13459903984755756, 0.13308721478508762, 0.12985762534582457, 0.13359981880406804, 0.1359209175245402, 0.1613232629588759, 0.13690079860486462, 0.1314831574048473, 0.12316615196930092, 0.14862233986449594, 0.15655375795732152, 0.12901679406343564, 0.13698481978942473, 0.140619462714984, 0.15621959699396687, 0.1367373979078948, 0.12862551496544217, 0.16393360638409954, 0.13296180368367813, 0.13551929876600186, 0.1319101905379993, 0.1333090316949643, 0.1489557019224573, 0.151405705927449, 0.1368362163670803, 0.14177224765357524, 0.13495369419410597, 0.13724089638363848, 0.1375429022727169, 0.13085983171046475, 0.14667167570411083, 0.1346887937588043, 0.13636792320858407, 0.1377412890786604, 0.13678690279274874, 0.14591363070804125, 0.1318799000890781, 0.13758805370578153, 0.13658942810948965, 0.126719276404252, 0.13889627014267408, 0.13908027432291317, 0.133998590509244, 0.13302006419665927, 0.13568733437844036, 0.15309171523905088, 0.14100265369227072, 0.14557212187220828, 0.13155229476946237, 0.13532644119538736, 0.1356997400631096, 0.1350185897368059, 0.13340735298659911, 0.1398879561759618, 0.1339859736836097, 0.14178053620692835, 0.1367110914095266, 0.1312977225589154, 0.1337349635710877, 0.13611726994672274, 0.13501726106424652, 0.13501726106424652, 0.1319575215552926]
lvec5 = [0.11872067099237227, 0.09895610022411544, 0.12700099599815784, 0.14712753354401087, 0.11158375608561251, 0.11267349844254829, 0.09931441224344452, 0.10231163474251982, 0.10306619335638965, 0.10099577917947894, 0.11572799753549973, 0.10255876177670847, 0.10673511299827146, 0.13731973208662265, 0.10331814587105605, 0.10188916831876102, 0.16064175940593564, 0.09036995882241274, 0.09936437775189623, 0.10039510988705937, 0.09345788779838007, 0.1061605729270244, 0.11216472246393407, 0.09295858514935548, 0.10425903565388886, 0.11320245050879844, 0.09885332535012906, 0.09944933637837676, 0.09755014875915358, 0.10577022110669429, 0.10975530386113794, 0.12787169722465172, 0.0966744814494863, 0.09609214275403467, 0.09963931425718413, 0.11235135519038737, 0.12064670871724047, 0.10448797341750722, 0.11592521939236976, 0.10407222291503355, 0.13872101618646057, 0.10933240840091268, 0.10512085013757809, 0.1057435988078292, 0.15708449311431877, 0.09485791554512941, 0.11961449525661479, 0.10805094412936338, 0.1008577328853939, 0.13062694148703327, 0.096394872433107, 0.13105596659546428, 0.12956350034806083, 0.11671796988575642, 0.11198920589797214, 0.11068534067187476, 0.12902022041504776, 0.09650605309560743, 0.09596308040247982, 0.12399148621033187, 0.09682917632894236, 0.09945931377364503, 0.11423569062031608, 0.09404760905783782, 0.09847638050056214, 0.11399995739878951, 0.11253401166176878, 0.10320521706938912, 0.09923486172922912, 0.09489160886285936, 0.13907691821162393, 0.1298500910681893, 0.1286073957830775, 0.10263102977204602, 0.1393161170796016, 0.10103989004690013, 0.10280911968074244, 0.1251268249167473, 0.10323530034160695, 0.15214569293930086, 0.10210234396340204, 0.11986066685833294, 0.1048705957725252, 0.14739161595801714, 0.1100903364369919, 0.09428409200279214, 0.09368788764765923, 0.09700318360426592, 0.10614703698983995, 0.1748170688456017, 0.09412375915458952, 0.09538892910733575, 0.09691684176437285, 0.10252822631874349, 0.10726494815620999, 0.0998073001146943, 0.12903506611103932, 0.10898517723745178, 0.12284656046167128, 0.09417709346893337]
lvec6 = [0.09541564947521758, 0.09161902400008325, 0.10235312530707762, 0.09196206240301862, 0.11007526916394288, 0.09253809853804217, 0.0963968081617305, 0.12362163157925166, 0.0922002845907695, 0.10011569470162285, 0.0987552794995027, 0.08976087068464958, 0.11403595385932902, 0.10958919838728497, 0.11032949404631254, 0.1282774491404776, 0.09452485791782178, 0.09213612011490224, 0.12373675733661055, 0.09657141137271266, 0.09369052700203956, 0.11090551809572999, 0.11337577335963916, 0.09423018746000868, 0.10836593603574535, 0.10507098982063674, 0.11966476897350929, 0.09901478925076553, 0.09070335475937656, 0.11196600454576192, 0.125784942576603, 0.09871736285803594, 0.10885636635208487, 0.09243560680582175, 0.09419036701536816, 0.11561744259515228, 0.12714140592169795, 0.09530016693014884, 0.11355024241171885, 0.09401870391743036, 0.15237683720437578, 0.09501893825150261, 0.10343186992976844, 0.11697049810711516, 0.12867076376935277, 0.09369108793836634, 0.08899365388340466, 0.12929060317480318, 0.12262646070672541, 0.10388430332113206, 0.10929495142548187, 0.09466134999595967, 0.13835925726861634, 0.10712674793981844, 0.15747969250172375, 0.13196193542933668, 0.10742359164501694, 0.0911802033912603, 0.11058051068252643, 0.11415236858654586, 0.10767405768400462, 0.10091163748684234, 0.0938177029906322, 0.09195897130041346, 0.09516862356230849, 0.09595288540103072, 0.13984680061505844, 0.09380151307572963, 0.10006534992504172, 0.10604599531979718, 0.09676664479157412, 0.09702179161039555, 0.13755747080698374, 0.10724671787683766, 0.12579572620768223, 0.15023990510487326, 0.09493300525336293, 0.09432462069399948, 0.09495493481987206, 0.0965080425191013, 0.12786737657270744, 0.09429621824266661, 0.1293549734753557, 0.11414116960734043, 0.10835370372919054, 0.09507806911628845, 0.09743645090611554, 0.09343463153806665, 0.09329779989943472, 0.09199857782098182, 0.10757097949806908, 0.1333866607252839, 0.09569078323873571, 0.09352157936457388, 0.132738775489415, 0.12447522814337839, 0.09361941567024173, 0.10865075352101125, 0.10757557812860262, 0.09596880980813018]


bins = np.linspace(0.05, 0.2, 100)
fig, axs = plt.subplots(7,figsize=(5,12))
plt.rcParams["figure.autolayout"] = True
axs[0].hist(lvec1, bins, alpha=0.5, color='red', label='Design 1')
axs[1].hist(lvec2, bins, alpha=0.5, color='green', label='Design 2')
axs[2].hist(lvec3, bins, alpha=0.5, color='blue', label='Design 3')
axs[3].hist(lvec4, bins, alpha=0.5, color='gray', label='Design 4')
axs[4].hist(lvec5, bins, alpha=0.5, color='orange', label='Design 5')
axs[5].hist(lvec6, bins, alpha=0.5, color='purple', label='Design 6')
axs[6].hist(lvec0, bins, alpha=0.5, color='black', label='No Additional Data')
axs[0].set_title('Design 1')
axs[1].set_title('Design 2')
axs[2].set_title('Design 3')
axs[3].set_title('Design 4')
axs[4].set_title('Design 5')
axs[5].set_title('Design 6')
axs[6].set_title('No Additional Data')
for i in range(7):
    axs[i].set_ylim([0,20])
fig.tight_layout()
fig.suptitle('Bayesian loss: 30 tests, Omega=100',fontsize=16)
plt.show()
'''

'''
# Put loss value data as vectors below; this will generate a set of histograms
# FOR 6 TESTS WITH ALIGNED PRIOR DRAWS
lvec0 = [0.14335674740847668, 0.13563245422451242, 0.1415963480854923, 0.14477842127227447, 0.1403673820567332, 0.14422281864161265, 0.14329261560423487, 0.1420062342037913, 0.14433295208263913, 0.1403238089040552, 0.13622023914021908, 0.1331215477563341, 0.13985955261052357, 0.13625107480023418, 0.13278830969158803, 0.15104810337007638, 0.1432066934207097, 0.14654590113820598, 0.14155140609144773, 0.13852272271124094, 0.13445127898827322, 0.13908978650635498, 0.1360373375312127, 0.13526163120094575, 0.13351511475872638, 0.1392834993888565, 0.14217784089826874, 0.1377067146937541, 0.13608336613577093, 0.13836213835655492, 0.1425563771081175, 0.13701890404704872, 0.14275701547310093, 0.14037446661784928, 0.135899731846271, 0.14472193099297048, 0.14004487852829342, 0.14100806934369722, 0.13803489989603657, 0.13771365713309786, 0.14139179718653286, 0.13087720270484154, 0.13903043764659487, 0.1451529118187262, 0.14357323831263982, 0.14277614431056324, 0.13806245145666834, 0.1390161454589516, 0.13787407260580362, 0.1298548333936015, 0.1286585066046738, 0.13813220094369869, 0.13870075098025772, 0.134798114071913, 0.14181892280318806, 0.14415150594437046, 0.1401707511122268, 0.13713175719384266, 0.13294292602440483, 0.13685260067190896, 0.14083582503649433, 0.14136240031126082, 0.137865717839781, 0.13393002615490654, 0.1427531689634655, 0.13538762826838718, 0.1496264644252375, 0.13540613334631685, 0.14101331288050714, 0.14671835743546532, 0.14478887242738706, 0.14931950638902403, 0.13283790393728137, 0.12970826512223263, 0.13796919743108113, 0.138645518281725, 0.1376171622310323, 0.13691141612588123, 0.14049677187086496, 0.13977659698381142, 0.13564191745044885, 0.13998212469718388, 0.14584815842274426, 0.14039224867696098, 0.13309154841127116, 0.1440026953609819, 0.1417341702439205, 0.14080983152552431, 0.14814505856180918, 0.1409467537003577, 0.1427572188544298, 0.13285891774806471, 0.13551388876899503, 0.15248278741427487, 0.1405290826335275, 0.13718595570106867, 0.13974116032513081, 0.13990250040610652, 0.1365994485550459, 0.1423325398989005]
lvec1 = [0.12201050841773795, 0.12043612929780032, 0.13073931438352507, 0.1364518894400282, 0.126623022019832, 0.12129034295509719, 0.1232672454634404, 0.12829647617332493, 0.1204383656377655, 0.12010396716036557, 0.12708881433791652, 0.12059223579432472, 0.12640641713012227, 0.12043747160548378, 0.1317713280271366, 0.13858549031033934, 0.13040661796428832, 0.12372466444805368, 0.12215449081690144, 0.1172009306470824, 0.12802623225846077, 0.1207461516663038, 0.12235892887452496, 0.1237439078162338, 0.14725564258748042, 0.13006245686750906, 0.14111960898512146, 0.17052348372877876, 0.1190717430571908, 0.12839190136479653, 0.1215378659762556, 0.13000799753778808, 0.14087523828697612, 0.12178319944876939, 0.11944931473707801, 0.13614838354520106, 0.1310193249361005, 0.13912347347964416, 0.13463403735188875, 0.12185038633366564, 0.13740933280689316, 0.12913455703853216, 0.1188198890500554, 0.12938061803611323, 0.13219144179335499, 0.1209876416531576, 0.13139604212837558, 0.13945216905042135, 0.12512858752159517, 0.12818879468468689, 0.13252466861777462, 0.12574018916451998, 0.12203959568330597, 0.13923442145341772, 0.12246806165101219, 0.12011562841490274, 0.12643323707555493, 0.118186357124321, 0.12935168572901068, 0.12191470565635104, 0.13134511716605102, 0.1311317978540064, 0.12207860410895834, 0.124199649707826, 0.11923683773905948, 0.11854576204531829, 0.11753594477762297, 0.12656098087414308, 0.1724834600715802, 0.12438430951545777, 0.1229256028188119, 0.11795059660489447, 0.13636488838672947, 0.1254482273206744, 0.12947143515380027, 0.16600685694908843, 0.13088972029296908, 0.11564403011841372, 0.13671181841978577, 0.13171782578024416, 0.12896629513125607, 0.1362756683234587, 0.11843610117102911, 0.12863906985263984, 0.12339918133715126, 0.12634457005632155, 0.12313895622846809, 0.14260811473494, 0.13626616465233088, 0.15372332948843448, 0.1434845627302847, 0.1230299628340709, 0.13176708856049998, 0.1395751781776649, 0.11975090088573094, 0.12361396890224147, 0.13871207590032084, 0.1297945249169143, 0.12117548483589585, 0.12975781998413966]
lvec2 = [0.15238542474736136, 0.12416000145102413, 0.11856185872093881, 0.12545129368105196, 0.11800066341138132, 0.1310749103727152, 0.1215110780178015, 0.11857074405567126, 0.12389455875043998, 0.1530164510573582, 0.12161702328986287, 0.12992232214863692, 0.1252833347448361, 0.12503413557512796, 0.13030466064318882, 0.12301603919333307, 0.12767357715731098, 0.12187376486069143, 0.12839519369532118, 0.12187149680502116, 0.1316911872028336, 0.1670777138626097, 0.12697005698390443, 0.1251608812969274, 0.12321194714345672, 0.12805819638937815, 0.12347895706959296, 0.12187385208205766, 0.13936980037679325, 0.12666746805772217, 0.15235565088686923, 0.1613461530037538, 0.12236035538670618, 0.12684132758695707, 0.1220728161552606, 0.1300059913518878, 0.11716093367861431, 0.13402676288917956, 0.12241962555165883, 0.12264167358758132, 0.16281436208884878, 0.12056146931995634, 0.12290217673851227, 0.16651647434137162, 0.16927325019045486, 0.12944508905261645, 0.12988904262008888, 0.12294224674448281, 0.12110165082456244, 0.13357607455910664, 0.12594857767702744, 0.1269027483049385, 0.12415627402620194, 0.12128567177768446, 0.12737086085310634, 0.1180265010822364, 0.17344564060968254, 0.1293714295644241, 0.12223619639782239, 0.16405124427145734, 0.17084447347450293, 0.12974806157984156, 0.12178804449372693, 0.12604369300039517, 0.12453163835779633, 0.12654454158871623, 0.17713094005456867, 0.1681364617228342, 0.13314289818336425, 0.1281644397708753, 0.12327975016436318, 0.12924059040596117, 0.12164580144421144, 0.11804350443733692, 0.12106292848486871, 0.15226808411335116, 0.12460647669956389, 0.12384383655708565, 0.12061655988946357, 0.1682564257436373, 0.11849829654882289, 0.1237931111023102, 0.12896236813406728, 0.15294569683681017, 0.12456469764409682, 0.11731549903908756, 0.11962179433370436, 0.12643206776930294, 0.1290755183982052, 0.12578900407133392, 0.13417482822356114, 0.12750336687043978, 0.13200614014992354, 0.1301742209724923, 0.11938304339372552, 0.16029317773572618, 0.12203338206476552, 0.12061844773010158, 0.1192011085902017, 0.1168882509688956]
lvec3 = [0.11968945017493399, 0.1325436932290337, 0.14304805439947274, 0.1372543418415863, 0.12290613305555953, 0.14695010942380696, 0.13031555945168918, 0.13531654564770476, 0.1158741789601965, 0.1498587069417706, 0.11779397998017582, 0.1283547211242966, 0.1621151804519011, 0.1257006999953918, 0.11991742811824019, 0.1268546045454344, 0.12394170573349639, 0.12477126178978204, 0.1190782946526823, 0.131038995226777, 0.1324838410920371, 0.126966483959189, 0.1284249126060708, 0.12168406900888132, 0.14376143438692746, 0.13869800542490932, 0.1333019924968027, 0.1208481573363508, 0.13149910016599742, 0.12454346804251852, 0.12416419154401838, 0.13750454604372964, 0.1286813686370034, 0.14028810905728298, 0.1213177352332298, 0.12695929573630096, 0.1433875629602553, 0.13470849533432652, 0.12817395763370265, 0.12285242535964941, 0.13870021451858744, 0.13600244849094315, 0.1270527995828381, 0.12280415161590945, 0.12637045713291722, 0.12141924277310306, 0.1246896370512028, 0.12269154918042903, 0.1287737374226314, 0.12985925749546925, 0.13354916306914855, 0.13795245908487103, 0.14769512635074547, 0.1397037543205498, 0.12308134046357264, 0.14974958664483456, 0.1356718864457288, 0.1253954947931722, 0.11834632002053354, 0.13763653544765558, 0.13683202603444303, 0.13328576005594758, 0.12057438649922828, 0.12482051629691142, 0.12192516990834829, 0.13580861906678587, 0.12071682867720668, 0.13550846627877247, 0.13588277684680278, 0.16369077088013323, 0.1227169568278283, 0.1271825432585842, 0.12522762416783856, 0.1612926181934334, 0.13727307213520676, 0.12942489580816072, 0.13026549173333488, 0.11983336499477812, 0.15224764991568943, 0.13337120600716007, 0.1403182666152804, 0.13139788948796524, 0.13166045104960175, 0.11710496883564678, 0.13108140747205071, 0.1277556031748408, 0.1250926460932209, 0.143131392246206, 0.12396595753727355, 0.13399058931192548, 0.1236393191280366, 0.12780745696316256, 0.13155860738370817, 0.12861567393236803, 0.1415479851588361, 0.12999045002741, 0.1359923098261614, 0.12383469845050561, 0.12866916743505388, 0.12401132881977579]
lvec4 = [0.1352845722566932, 0.14676481273608546, 0.13617179930790266, 0.13111194193337558, 0.13261705480888214, 0.14324954913507976, 0.1407156988441613, 0.13071409341375467, 0.14584916511227436, 0.13904442195739236, 0.13942570538761256, 0.13511782995813032, 0.15741384910797232, 0.14134527072950878, 0.12797589612112317, 0.13240076164430448, 0.14603277628727662, 0.1376266746261868, 0.1372023821870774, 0.13541094989804836, 0.13625487761142846, 0.12447453708396672, 0.1382351680678216, 0.14058101846783105, 0.13389382651385662, 0.13990347747294574, 0.14488860174608864, 0.13856687175919022, 0.137353958602558, 0.13642015110993586, 0.12974855792662338, 0.15408758414245627, 0.13821155691532525, 0.1352709133185309, 0.14170062250351748, 0.1437968978433749, 0.17244173701141183, 0.14552508931270425, 0.13218146746173376, 0.13266303015402042, 0.13564130945252847, 0.1422149899212039, 0.13829300075938372, 0.13900973201268413, 0.13511936285008339, 0.1375824488642537, 0.1383253584553228, 0.14913740132579442, 0.14284340702935014, 0.13451574855649923, 0.14023960229927757, 0.13775515057865548, 0.13927640226181268, 0.1344168495096326, 0.13242825560538227, 0.13468672644975974, 0.15844834745132955, 0.13216370070921776, 0.13943167205203777, 0.14228292777709944, 0.1481298745263082, 0.147229085242329, 0.13826794796438865, 0.14071736778976537, 0.14069831017179463, 0.13987957907623527, 0.13491992218038842, 0.13618380638845887, 0.13677340694471815, 0.13919032228806608, 0.13304153436570285, 0.13973684718318358, 0.1364626444003569, 0.13624335520653014, 0.14040138286659196, 0.15014057228145838, 0.14720994690273764, 0.1386719505841382, 0.1513947884882519, 0.12698156752057949, 0.1400097948280201, 0.13075318688227747, 0.13973938301337638, 0.13814820260866645, 0.1431025063507889, 0.13628003172330858, 0.14455007373473877, 0.1352750432016824, 0.1538728424402952, 0.13659639179914215, 0.13566048995416258, 0.14170515913794587, 0.12987367555904136, 0.13447526430042245, 0.1420619370668284, 0.14273022667987856, 0.13441731071875734, 0.15467886772404668, 0.13124039492598313, 0.13286578526945192]
lvec5 = [0.12191093611978823, 0.12708169743205974, 0.1272636312739816, 0.14103361731286418, 0.12693632576654, 0.13304107664810577, 0.1302975872196582, 0.13256094255129988, 0.12692322287558372, 0.13375235591878326, 0.12025968972902515, 0.1261516981892684, 0.11986502410706971, 0.12138320768684153, 0.1813892352356074, 0.13401682206709115, 0.12669158506368067, 0.11985349037923573, 0.13056358656370937, 0.1356342482734177, 0.1204218168262275, 0.1400747526297201, 0.13675755106631982, 0.11831008430642476, 0.12755393808507823, 0.1593038250647806, 0.13996987224224056, 0.11820675748145908, 0.1271468449259773, 0.12454090031023654, 0.13368031785519457, 0.12007752130071597, 0.13371587422897344, 0.1556396335987057, 0.14523760438506442, 0.13065697246909883, 0.12386942982227049, 0.12402642437575141, 0.12672499429565415, 0.1336400508810701, 0.12390288782713436, 0.12859661542374207, 0.13479812592240617, 0.17728763842220086, 0.20271175247286882, 0.13920968054911512, 0.15309643997132688, 0.12929922262035645, 0.12252606771695293, 0.12115454015934378, 0.12557714817101553, 0.1278999587941183, 0.12612818896832934, 0.1276101793657718, 0.13605125188246692, 0.13625655288186111, 0.13459521031844301, 0.12622357697921396, 0.12130178930914494, 0.11879710682753364, 0.13272920273747954, 0.12233040767844738, 0.13050155418693982, 0.13652882039658154, 0.1393903112484995, 0.14264696944389513, 0.1502599102044462, 0.12708582344193506, 0.1300382126825252, 0.12279958314682231, 0.13570107823705985, 0.1300847399161663, 0.12260123442009686, 0.13061035828398823, 0.13595355056167482, 0.17303456461845537, 0.1214447900240019, 0.13132902212166903, 0.12526856532784453, 0.1340549121066598, 0.12531155098269606, 0.13925232204956975, 0.12837818778151572, 0.13301024305047923, 0.12084300032357848, 0.128619300598818, 0.12478666049535385, 0.12305730026092342, 0.11869881179935267, 0.127185191242855, 0.12459116032053631, 0.12994807480650994, 0.12953497159669972, 0.12205133545614338, 0.11504257424981326, 0.16083365841896502, 0.13833483629434748, 0.13910363830732322, 0.1364123941028384, 0.12807200355649667]
lvec6 = [0.12475497644583944, 0.1386321013935679, 0.1208753412297372, 0.15688250291805805, 0.12083183071126759, 0.13526962263083997, 0.12232458042947052, 0.12346772862205556, 0.12158596803391417, 0.12664952090823417, 0.12522970006424913, 0.123706420361703, 0.11880015458354379, 0.12699231530005928, 0.12262686596504813, 0.13390241032968137, 0.13652605835439396, 0.13769186591432675, 0.11953670579205597, 0.12533318635500146, 0.12902414968714826, 0.12540601949868774, 0.17509188604238196, 0.12225868156154623, 0.16574629330625992, 0.12300936403903032, 0.13494763088967124, 0.12245246666274992, 0.12233289331802301, 0.12839150207297131, 0.1282060877504529, 0.1393682809834952, 0.1254239380523154, 0.11927829024952745, 0.11928392423297908, 0.11902723275230272, 0.12059340731748759, 0.12318861995192346, 0.11368321155184725, 0.11951662661787217, 0.1566939652890786, 0.11728135703106865, 0.15889529838957087, 0.12348039186301266, 0.16512875522579423, 0.12201270489254022, 0.13639955005658538, 0.12211946993422265, 0.1415225617063233, 0.15610802663623036, 0.15573151959997997, 0.1457790620797599, 0.1624898882941196, 0.13090985481725606, 0.12818600780594733, 0.12088855446536372, 0.14437680332888114, 0.1269528795501376, 0.12897512661472918, 0.1473558509233415, 0.13247059623426952, 0.13093752438623257, 0.13341472064259094, 0.11939492882664672, 0.1300606838149642, 0.13321853915165002, 0.15559933860002736, 0.1271223345548175, 0.12601001137643358, 0.12256722591761975, 0.13689565112612762, 0.12844436814336876, 0.17247821767148042, 0.12516487317262992, 0.11908008607474001, 0.13973670445627687, 0.12182055570553972, 0.12582761103969578, 0.13268530311862492, 0.15307261770021477, 0.12349380649330256, 0.1373215278132167, 0.14381270185270073, 0.13777692661572863, 0.12018275758883668, 0.1199307398555828, 0.13016881811720543, 0.12777285283597695, 0.12039360857817911, 0.12713943788777454, 0.15336069214878204, 0.11942313948012324, 0.12416908300280852, 0.14013886517298757, 0.12807446768004763, 0.12032389718180138, 0.12210820075054835, 0.13204462579092932, 0.11645497995108763, 0.1366719345439779]


bins = np.linspace(0.05, 0.2, 100)
fig, axs = plt.subplots(7,figsize=(5,12))
plt.rcParams["figure.autolayout"] = True
axs[0].hist(lvec1, bins, alpha=0.5, color='red', label='Design 1')
axs[1].hist(lvec2, bins, alpha=0.5, color='green', label='Design 2')
axs[2].hist(lvec3, bins, alpha=0.5, color='blue', label='Design 3')
axs[3].hist(lvec4, bins, alpha=0.5, color='gray', label='Design 4')
axs[4].hist(lvec5, bins, alpha=0.5, color='orange', label='Design 5')
axs[5].hist(lvec6, bins, alpha=0.5, color='purple', label='Design 6')
axs[6].hist(lvec0, bins, alpha=0.5, color='black', label='No Additional Data')
axs[0].set_title('Design 1')
axs[1].set_title('Design 2')
axs[2].set_title('Design 3')
axs[3].set_title('Design 4')
axs[4].set_title('Design 5')
axs[5].set_title('Design 6')
axs[6].set_title('No Additional Data')
for i in range(7):
    axs[i].set_ylim([0,20])
fig.suptitle('Bayesian loss: 6 tests, Omega=100',fontsize=16)
fig.tight_layout()
plt.show()
'''
'''
# FOR DESIGN 2, DIFFERENT BATCH SIZES
# BATCH SIZES: 1,3,6,9,15,30,60,90,120
lvec1 = [0.1382851174053969, 0.14001812171109226, 0.13754892582641817, 0.14319284601145926, 0.13795392990717406, 0.1268831860393539, 0.13223600103532054, 0.1306233249995498, 0.13924652706958165, 0.1283945989188211, 0.14368256557434433, 0.14191766456895744, 0.1469925728560264, 0.1321289876524692, 0.1366371934135474, 0.13468753456757593, 0.13767272693538932, 0.1345128702034592, 0.13505360014551546, 0.13446371958911923, 0.13613065468488791, 0.13894723230325975, 0.13451775636662905, 0.13809931962925306, 0.13714559659227157, 0.13947953429030577, 0.13479306133454735, 0.13489609132095903, 0.1385013978833726, 0.1284548491658115, 0.13836339154918326, 0.12867732693672904, 0.13355659960520164, 0.14104482065648566, 0.14060719555447607, 0.14029681962736493, 0.1429691018617521, 0.1433579493697108, 0.1465888643820997, 0.13954572028655488, 0.1315151451873408, 0.1322133905511833, 0.13677325648827102, 0.13132738129063065, 0.1396219057072618, 0.13282353388666626, 0.14464659775400643, 0.13157413090798625, 0.14290500938721792, 0.13606377714180506, 0.1426863986668447, 0.13815023052139153, 0.1435340749717443, 0.14521104266817897, 0.13825193544202158, 0.14142513625986158, 0.13561307269020076, 0.1377560986712839, 0.13509712322728037, 0.14260994232825824, 0.13385919339080263, 0.1335819901588062, 0.1411477138695957, 0.1335391487542657, 0.14064709078284116, 0.1375111864366289, 0.13436689317995523, 0.1411841349361796, 0.1395267256791663, 0.13203486765745825, 0.14753671004614638, 0.14122911369888672, 0.1353850587486798, 0.13473873721520968, 0.13127212453049972, 0.14660675813920687, 0.13659467867713088, 0.13930576268556452, 0.13780771828542085, 0.14398843148160873, 0.13565742247492057, 0.13034283855672554, 0.14594461044332185, 0.13383305039379773, 0.13924848542633433, 0.13981329678561827, 0.13373203977455253, 0.14400246518386972, 0.1322207240959983, 0.13896453774977602, 0.1344915972060527, 0.12712028508556686, 0.1347847239791129, 0.14007453553053947, 0.13904568927790434, 0.14696243171282175, 0.13874487494336493, 0.1398263250716958, 0.13621489140825105, 0.1412404923181527]
lvec3 = [0.12754209193762045, 0.14031219720978916, 0.13010100439884947, 0.1327246470991515, 0.1332488070741414, 0.17785684814211353, 0.12842574463210446, 0.13181677560053628, 0.1343499195285006, 0.1323374633661742, 0.12836862511602445, 0.13001859567488736, 0.1365527321797588, 0.12775634414907083, 0.14580346329980734, 0.1640785189966381, 0.1311423007944489, 0.13223061726192142, 0.12767395998354436, 0.12429207661021083, 0.1265604764724026, 0.13072937443355737, 0.15671777269777182, 0.12514181892215678, 0.13168644644057526, 0.16274530137939722, 0.16654474484115633, 0.1316258004074624, 0.12731853589008554, 0.13304878913448515, 0.16877064424013738, 0.14011507180814017, 0.13192862095566837, 0.13519505789846187, 0.13002509201899204, 0.13168205990715817, 0.12994389799319672, 0.13038181706740126, 0.13431882708195128, 0.13746970899234498, 0.13539540264916458, 0.13187656307255322, 0.12431849400498717, 0.1359421820996568, 0.1402045525933901, 0.13004588835054184, 0.15541791834086593, 0.14064162552679338, 0.14398776681161168, 0.13098598869805433, 0.13149320194788397, 0.12466650137227676, 0.12558509385287775, 0.12866038302659563, 0.12276005085403116, 0.14072567557070134, 0.1352397865128543, 0.12754968146727946, 0.13486722902716416, 0.13812067525789604, 0.13077164978460684, 0.12421614836506772, 0.13053932787578845, 0.1424602422968631, 0.1356655009144377, 0.12336190397019592, 0.1763291581758909, 0.13485437977146017, 0.13710596579031564, 0.13536365402373685, 0.13468122921665523, 0.12917129059795848, 0.1276483697656916, 0.1323977545839571, 0.12551400367921778, 0.12857307122660724, 0.14361415551003537, 0.1308466649890505, 0.12804604661716115, 0.13949772094922838, 0.13469768774136429, 0.13439317572192727, 0.139571936534967, 0.16138343349345874, 0.1337429322374952, 0.1264559037967682, 0.13287607049071282, 0.12886536830391265, 0.1289458592389802, 0.13972577268180966, 0.16357485389183302, 0.13183066178615818, 0.1286594029985115, 0.14251296512081071, 0.12992524663842345, 0.1276910317582295, 0.13177232012817194, 0.13286285454203875, 0.1286328856645646, 0.1275233927771327]
lvec6 = [0.12433754182667398, 0.12194348461317742, 0.12590870824370903, 0.1650612399274014, 0.11660323939954799, 0.1550012255757987, 0.11851821551745177, 0.11300075272196147, 0.12603735603038183, 0.12759422397869968, 0.12675597702853525, 0.12765058383753056, 0.17304937455387537, 0.12331365028903303, 0.17084474441074896, 0.12217704660509349, 0.12769327218933202, 0.12361541210417527, 0.14987209412511546, 0.12220345346118416, 0.11618055556088235, 0.12317396772104953, 0.1591241772708671, 0.1287501426036278, 0.15999209455379718, 0.13352134588142314, 0.12439835851025323, 0.12552404198207331, 0.15391190905161137, 0.12668131788743184, 0.1276905388836984, 0.13164493503925964, 0.12139037365842506, 0.12346584630474629, 0.11538089543509918, 0.1269439931616859, 0.12959254877434268, 0.12463013733521121, 0.12690442778291264, 0.12770915563434942, 0.11834668515457407, 0.12203489790679796, 0.12464968358416198, 0.16547713090274027, 0.15345171719285375, 0.12843650892478584, 0.15134025143850063, 0.12183171900321203, 0.12896614137077153, 0.12545796647542629, 0.11748932973867503, 0.12102198277823914, 0.13605490663819864, 0.1640974269439278, 0.1315371940008381, 0.13593019290635003, 0.12403400849140193, 0.12558254177597689, 0.13432269089487242, 0.1366098321735959, 0.15287600805506404, 0.12135458181026205, 0.13251252045351086, 0.12120736337653858, 0.12345252567843581, 0.11849174293757815, 0.13204872903719025, 0.12510997166087223, 0.14710924898264116, 0.1218828264663268, 0.13573031596717167, 0.12424194248911892, 0.11933529870096257, 0.13109162013822578, 0.12332355525620181, 0.17477530317815923, 0.12731653315765565, 0.12550689364421475, 0.12427427991209355, 0.1244676977894243, 0.12438542288414496, 0.11158700451513842, 0.12452126100538356, 0.1649556065840589, 0.12188870584145282, 0.12295867250656625, 0.12321345616520511, 0.12934543660444442, 0.1315598952043253, 0.12538777884538446, 0.11930110198822327, 0.12534049573460468, 0.12703960437205986, 0.11903414221469213, 0.12323933245863394, 0.13339834224559424, 0.12633232565946675, 0.13161595636186946, 0.12377157689127248, 0.13250428442928405]
lvec9 = [0.11748928506343179, 0.1460863128067855, 0.11407049155926802, 0.14705880300764398, 0.12019339581428685, 0.14210327984212776, 0.12117708711947142, 0.12542446337237548, 0.11635515037930713, 0.11614602839185952, 0.11640537681412763, 0.11948710527913581, 0.12672512842236047, 0.12027594834758522, 0.11705752492854495, 0.11829839088786694, 0.12770860287185318, 0.11481091575689541, 0.13903419072907655, 0.12287821308478383, 0.11455699727596148, 0.12357160001157354, 0.11801431451229694, 0.11454853602837017, 0.13967124212883272, 0.11892421015290852, 0.12364663673751937, 0.12185928791064343, 0.12067624768201367, 0.13283581858905597, 0.16726099216099857, 0.11755217273047704, 0.14720833212286794, 0.12169006857340385, 0.11577554762326946, 0.11652966139310228, 0.12227003280416099, 0.11482485195643105, 0.12498824916690547, 0.11414833926185687, 0.1183123444337524, 0.12057774564826762, 0.11964287688468388, 0.11321416081404848, 0.15739559050652757, 0.11953752087497012, 0.1456830208414179, 0.13248242768669363, 0.1256804870640552, 0.11644150462784875, 0.11701223929813914, 0.11925410843088004, 0.1193887271700322, 0.115374179889621, 0.1132558823810791, 0.16474111020751955, 0.14172310426915524, 0.11295236029146725, 0.13004867989595828, 0.11892065446918297, 0.12156572679687239, 0.11310809279177945, 0.1266641514065548, 0.11136726069602494, 0.11582608654479677, 0.11432925475383054, 0.11038295993953608, 0.11588890045679161, 0.1175709630608052, 0.12297917702100528, 0.12200921563828447, 0.11054971963042483, 0.1177305128860591, 0.13006524081993515, 0.11355679160189475, 0.1429608734920779, 0.11905624638155204, 0.11758549914063446, 0.14570046523085747, 0.12983117175492204, 0.12968948231215896, 0.1563702202141075, 0.13119106517259513, 0.12087327379758385, 0.11934216184420274, 0.11976654118547068, 0.11945053103727771, 0.12207708728938135, 0.12332228707172388, 0.14519247897275556, 0.1224920596426375, 0.12345624895108928, 0.11308087526474427, 0.1614900264608201, 0.1189529714552026, 0.1291038916022557, 0.12288951505524218, 0.11768090294824644, 0.14288249779541481, 0.12397805969293298]
lvec15 = [0.10772478949943735, 0.1498507501744442, 0.1120621733680482, 0.10393691698361628, 0.14836324690102073, 0.11384881647721916, 0.11134826713307305, 0.11162919692818385, 0.11666161585555063, 0.11303350927438531, 0.11140029928216179, 0.1358503558361647, 0.13068748292009127, 0.10629089004511434, 0.10862315885177481, 0.12957732083492318, 0.11228436236995433, 0.10886980114612207, 0.14722326660750482, 0.1064256403365992, 0.12038824757306509, 0.11427986638346274, 0.12713180293456697, 0.1413560206095047, 0.11139004397950053, 0.12762017441179146, 0.10956181229457412, 0.11053867109786883, 0.14524277006532368, 0.12428461881270848, 0.1412736536245981, 0.10953583434435428, 0.10888655300857414, 0.1088157622125833, 0.1093780440664395, 0.11379711733714785, 0.10930230385659931, 0.11046984222802575, 0.10616130108308247, 0.10914549335823213, 0.14955344324507286, 0.11484662806051446, 0.1181139854545459, 0.15410666170358003, 0.12749821651902288, 0.10909345408557734, 0.1403900068618267, 0.13039691069183443, 0.11432218847207008, 0.10997710131041034, 0.12009474720513151, 0.11422940871410302, 0.12188868155583975, 0.13166315302103518, 0.11923694728001845, 0.10867509079116396, 0.11179738933833926, 0.10975372404295407, 0.13591472634708132, 0.13844275703400163, 0.10848363468677705, 0.11215978383138335, 0.11776186929455223, 0.11015375612190173, 0.12833496487193213, 0.10771053270319808, 0.11304545256153277, 0.13406870027461323, 0.11055141065491172, 0.11566370780744131, 0.11119169159180312, 0.1017007437522097, 0.11803544641620836, 0.1122338898252369, 0.12998943183384984, 0.11287519157212027, 0.1108729984570672, 0.11102059228128512, 0.10910316894403732, 0.12623072355592566, 0.11192255556231677, 0.11053286199953882, 0.12414822036295545, 0.15933744541648798, 0.10813235156385653, 0.10721525819607955, 0.10800105793489968, 0.11303524374950856, 0.1150222414513403, 0.10599061529364426, 0.16621265062982146, 0.15197571932315018, 0.13838379295738407, 0.11403939233615723, 0.1075852100523573, 0.14422958779273082, 0.10922799107389135, 0.11225120578831836, 0.14987536847998922, 0.10900247560295566]
lvec30 = [0.08846907100334117, 0.12204653405437324, 0.11134160642351906, 0.138984542650809, 0.1337369860752422, 0.1371240842789891, 0.0971554324870248, 0.09958346985577195, 0.10070951154512953, 0.1303105442447949, 0.09523713865503293, 0.10023565081432302, 0.13808120389705528, 0.09258572338941401, 0.09535686158262739, 0.0989405020611249, 0.0977509560559939, 0.09233369659043171, 0.09186502887081881, 0.10229916568694297, 0.09769014380636622, 0.12441076071797716, 0.09562348292796775, 0.09894755161291612, 0.09076242632907182, 0.09900120031296175, 0.13508711227563935, 0.09688104831321939, 0.09303130639370566, 0.1002730850489025, 0.11704432618757596, 0.11086064850067875, 0.11421642464999045, 0.11224903432021985, 0.09658854889089168, 0.10155154091477625, 0.11313264385350051, 0.09646812107430189, 0.09448469219696544, 0.09590993358904992, 0.12666938714568207, 0.09323041161282601, 0.10004484549198316, 0.14708347169241295, 0.14215420667058778, 0.09993896998058542, 0.09085638171360762, 0.11144424407429102, 0.13331743110719665, 0.12653346231874676, 0.09625144190427022, 0.09443517157971194, 0.11538233583839862, 0.0942886572545733, 0.15040811652722275, 0.11104973161721125, 0.09544084724554917, 0.09615039404118614, 0.10951213864735798, 0.11443597658031189, 0.09281425125597206, 0.09353004646616962, 0.09189846418203722, 0.09255347949067606, 0.1126293928990595, 0.1020612492075022, 0.11397077467297453, 0.140034614394453, 0.09840195929636918, 0.09249003219794374, 0.09493236263693262, 0.0933496237858881, 0.09543991117379502, 0.09507212307818294, 0.09589540182851948, 0.12808578174114948, 0.09549844612906512, 0.09483262615764278, 0.09136296034539965, 0.10445110774280575, 0.10312559378396463, 0.13468756731500348, 0.09357601173632477, 0.11304264128209, 0.11433368758616862, 0.09403031746493874, 0.0924365093129436, 0.09163430929134851, 0.09714978624654719, 0.11045773385909953, 0.0972889114280848, 0.09245112879973207, 0.12393192749152888, 0.1318607692995051, 0.11037202091156127, 0.11092581456281522, 0.09532457750938307, 0.09564834367807871, 0.09638682641661762, 0.09801396237029503]
lvec60 = [0.11076886244999712, 0.10794217446131417, 0.0779743949369317, 0.11533592014254658, 0.1109052491749487, 0.08308703921016056, 0.08242476592046877, 0.08664817952957622, 0.08063578335260638, 0.10420814412588059, 0.0867210685321189, 0.0880846381993211, 0.10077269105839189, 0.07830684078532081, 0.11322583047002449, 0.10031053487635354, 0.09548000632534111, 0.08295739335098928, 0.1027765095428521, 0.07562388462366086, 0.08318731564822239, 0.08998925134456452, 0.11227434244092038, 0.0844274367853152, 0.08831850308147177, 0.10917756335357795, 0.09884294763886052, 0.08522253349077377, 0.09940397036416689, 0.09011537863787258, 0.12036363234211818, 0.08230636677883602, 0.09443114397439027, 0.07804064987883635, 0.09083367594126371, 0.08435028981000703, 0.08807987920810456, 0.0920598927385618, 0.07770968162666687, 0.07552247977778644, 0.11263165179052372, 0.07756459489367531, 0.0960402832440519, 0.0942223754572371, 0.11580369724967163, 0.08002319293815537, 0.08668627118882896, 0.0890062011203958, 0.09975712313150716, 0.0940727794991163, 0.08406929438162697, 0.08643114961596503, 0.11834969849522493, 0.11414912758461597, 0.11668570979213341, 0.0882518858108295, 0.09124150531180471, 0.09008539969888303, 0.10905194066004607, 0.10050495382148243, 0.08506121635756948, 0.08033997804445821, 0.0879259935958305, 0.10520819416911927, 0.08440209667029251, 0.0805532629897463, 0.11988429052691865, 0.10234225083468755, 0.0992750625243562, 0.09187226918705657, 0.10944106860933689, 0.07701657889480565, 0.07894308660158779, 0.0808844244563463, 0.1191735579746127, 0.10897726990538247, 0.08988844853033495, 0.09236332663015252, 0.0842971371345316, 0.10663824475883597, 0.08261787637620276, 0.07946034114488736, 0.0870167233260839, 0.10662534110960648, 0.08752585706977371, 0.10363996469326044, 0.07925684587221332, 0.08539647031155141, 0.08023070823046631, 0.1356437311947647, 0.10419347107397983, 0.10984757857034978, 0.08542406125519479, 0.08591897094310902, 0.09229280142242025, 0.0964064023564696, 0.07710067717294909, 0.10741884459466787, 0.08536781359745918, 0.1004933307999278]
lvec90 = [0.09642721988155334, 0.10403541227205243, 0.0730133192495076, 0.09145252478484514, 0.08538464089042226, 0.10645872028860473, 0.07598832426694897, 0.06991109749613915, 0.0809250937507537, 0.09962626871849246, 0.0774859475580143, 0.09291977527122923, 0.12193659128651799, 0.08313734871675238, 0.08349192405771613, 0.08233108825516103, 0.08724545180308027, 0.07861120894627445, 0.09882234380662476, 0.07319976682162924, 0.06612385011473994, 0.09180114556146639, 0.1034930884702895, 0.08574279161504825, 0.08997179196047868, 0.07580362503942022, 0.0960375064388277, 0.0782144109123736, 0.07469658701526963, 0.08450800756131763, 0.08162684210491385, 0.09283642613843474, 0.09466209280141015, 0.07051150516229036, 0.07466146217292059, 0.09245888192626373, 0.08650772286603611, 0.07317861463139835, 0.08673948288704378, 0.07843332177090222, 0.10998877413582642, 0.07604552070619229, 0.08664569021110281, 0.10601531128988319, 0.11238235719913221, 0.07548813902813917, 0.08804272409424477, 0.08504537600743395, 0.11128178480225559, 0.07796959313318363, 0.0681705338003573, 0.07369603911074335, 0.10587698706446375, 0.1109514757127799, 0.11223556068322021, 0.08517945682074983, 0.0865974941123515, 0.07819719965926138, 0.10002460175071821, 0.10621134262993664, 0.07528635919493602, 0.08331661757506943, 0.09105838516897896, 0.06866481988328262, 0.08394142524969156, 0.07082295768764296, 0.11569474582189962, 0.10509086052657826, 0.07919763144385919, 0.07714976252864704, 0.08892158234356963, 0.07040217005785754, 0.08717196694431203, 0.07543511483805644, 0.08493036434540689, 0.08890668125478991, 0.08769676241542582, 0.07364444491528684, 0.07942904546957699, 0.08307536983810253, 0.08614151537944313, 0.08155134304624946, 0.08167350968014725, 0.10680910171542128, 0.07913480374635684, 0.07012822699392124, 0.07778821460229014, 0.06971972806210365, 0.07945058979178352, 0.09488802647216683, 0.08394358889555315, 0.10395771769054366, 0.0703614954629504, 0.08327987440648023, 0.08213222251764787, 0.0785126324135433, 0.07756043050559559, 0.07142501334557441, 0.10390080885133889, 0.0814705951512844]
lvec120 = [0.09326514516455957, 0.11729139796395839, 0.06312146197313785, 0.08291708194253167, 0.08881036988449643, 0.07461142748671286, 0.06907526621358095, 0.08857449218721601, 0.06464610946317406, 0.09361255979304942, 0.08143458173948649, 0.09304987304536197, 0.11126974256448698, 0.07311375220065432, 0.08633246218515617, 0.08078307135229243, 0.08000884325611742, 0.06573575876582188, 0.0967110462890727, 0.06752645192483127, 0.061682593190973606, 0.07795380133523934, 0.08068226969750578, 0.06890771994513761, 0.08493247259935836, 0.08128640610566762, 0.07973259998026623, 0.06642605550463118, 0.08079590335268938, 0.07172342278983723, 0.07975693652429418, 0.09604150941179804, 0.070072148542247, 0.08015605869980669, 0.07243994150538886, 0.06441375936386962, 0.07259167110552081, 0.06574406518144081, 0.07862991689056165, 0.08274412646368748, 0.0973568724652092, 0.06598653670774755, 0.07931605438556313, 0.09039866038313019, 0.10813527619973, 0.061530549428849994, 0.09575175214498256, 0.07105241723109902, 0.09152957674966612, 0.0874170224242956, 0.08236575191292138, 0.08304330194665331, 0.09957622664057147, 0.09705973256384544, 0.08683141734514865, 0.07241906107013056, 0.07931192773604237, 0.09478077095855744, 0.08799863477977289, 0.09421569353448485, 0.08096712096995085, 0.06546350420863585, 0.062167275901520415, 0.07004522579413078, 0.07843061715962041, 0.06787180095889336, 0.09101042358785802, 0.07673806160516985, 0.06762351915677993, 0.09348929737377554, 0.10470844368146894, 0.05863126952650698, 0.06561959987448183, 0.073287707950743, 0.10293106203381078, 0.10606658095318984, 0.07184176563636407, 0.07681670982990271, 0.06671801805031552, 0.08827554314813656, 0.07531794357412919, 0.06283790410435862, 0.09091603630183206, 0.09865371701379161, 0.08990505684123234, 0.08507659154918575, 0.10006425781258366, 0.07622774443166253, 0.06946565404574782, 0.0846896194393638, 0.0815911632541146, 0.09244538661698533, 0.05872400220473437, 0.0720257463720226, 0.08694384395185407, 0.07266736831484687, 0.08245955490726943, 0.0798797592810179, 0.09910998340909383, 0.08406730406346817]

qts5 = [np.quantile(lvec1,0.05), np.quantile(lvec3,0.05), np.quantile(lvec6,0.05), np.quantile(lvec9,0.05), 
           np.quantile(lvec15,0.05), np.quantile(lvec30,0.05), np.quantile(lvec60,0.05), np.quantile(lvec90,0.05), 
           np.quantile(lvec120,0.05)]
qts50 = [np.quantile(lvec1,0.5), np.quantile(lvec3,0.5), np.quantile(lvec6,0.5), np.quantile(lvec9,0.5), 
           np.quantile(lvec15,0.5), np.quantile(lvec30,0.5), np.quantile(lvec60,0.5), np.quantile(lvec90,0.5), 
           np.quantile(lvec120,0.5)]
qts95 = [np.quantile(lvec1,0.95), np.quantile(lvec3,0.95), np.quantile(lvec6,0.95), np.quantile(lvec9,0.95), 
           np.quantile(lvec15,0.95), np.quantile(lvec30,0.95), np.quantile(lvec60,0.95), np.quantile(lvec90,0.95), 
           np.quantile(lvec120,0.95)]

fig = plt.figure()
x = [1,3,6,9,15,30,60,90,120]
y = qts50
lowerr = [y[i]-qts5[i] for i in range(len(x))]
upperr = [qts95[i]-y[i] for i in range(len(x))]
err = [lowerr, upperr]
plt.errorbar(x, y, yerr=err, capsize=4, color='orange', ecolor='black', linewidth=3, elinewidth=0.5)
plt.ylim(0,0.2)
plt.xlabel('Batch size', fontsize=12)
plt.ylabel('Bayesian loss', fontsize=12)
plt.suptitle('Bayesian loss vs. batch size: Design 2\n50% quantiles with 5%-95% quantile bars', fontsize=16)
plt.show()
'''




'''
# FOR 6 TESTS WITH ALIGNED PRIOR DRAWS, USING CLASSIFICATION LOSS W/ t=10%
lvec0 = [0.372, 0.38, 0.372, 0.375, 0.334, 0.394, 0.394, 0.397, 0.344, 0.364, 0.372, 0.413, 0.434, 0.358, 0.365, 0.417, 0.411, 0.43, 0.37, 0.42, 0.43, 0.413, 0.372, 0.407, 0.407, 0.361, 0.382, 0.4, 0.403, 0.357, 0.357, 0.361, 0.377, 0.363, 0.379, 0.37, 0.357, 0.437, 0.407, 0.373, 0.356, 0.399, 0.403, 0.414, 0.356, 0.417, 0.357, 0.394, 0.414, 0.406, 0.412, 0.376, 0.351, 0.406, 0.377, 0.396, 0.39, 0.392, 0.404, 0.413, 0.393, 0.409, 0.373, 0.356, 0.389, 0.383, 0.366, 0.362, 0.417, 0.428, 0.374, 0.343, 0.411, 0.361, 0.386, 0.389, 0.333, 0.38, 0.368, 0.365, 0.443, 0.326, 0.399, 0.399, 0.357, 0.394, 0.384, 0.37, 0.419, 0.386, 0.345, 0.384, 0.389, 0.369, 0.4, 0.377, 0.402, 0.419, 0.458, 0.357]
lvec1 = [0.34, 0.373, 0.394, 0.46, 0.348, 0.37, 0.299, 0.366, 0.284, 0.329, 0.362, 0.3, 0.308, 0.321, 0.385, 0.441, 0.404, 0.322, 0.313, 0.309, 0.367, 0.327, 0.329, 0.309, 0.543, 0.372, 0.519, 0.806, 0.335, 0.371, 0.321, 0.37, 0.481, 0.329, 0.3, 0.463, 0.389, 0.483, 0.437, 0.34, 0.441, 0.356, 0.308, 0.396, 0.434, 0.326, 0.384, 0.411, 0.367, 0.393, 0.468, 0.339, 0.31, 0.474, 0.302, 0.317, 0.375, 0.308, 0.351, 0.347, 0.41, 0.411, 0.317, 0.35, 0.323, 0.296, 0.29, 0.335, 0.745, 0.343, 0.323, 0.268, 0.417, 0.355, 0.404, 0.728, 0.382, 0.3, 0.439, 0.403, 0.396, 0.389, 0.321, 0.321, 0.312, 0.331, 0.365, 0.43, 0.432, 0.642, 0.456, 0.299, 0.436, 0.457, 0.295, 0.304, 0.471, 0.389, 0.313, 0.352]
lvec2 = [0.681, 0.293, 0.277, 0.375, 0.284, 0.351, 0.305, 0.293, 0.305, 0.611, 0.301, 0.336, 0.358, 0.318, 0.328, 0.29, 0.348, 0.305, 0.284, 0.289, 0.321, 0.603, 0.312, 0.307, 0.344, 0.353, 0.348, 0.266, 0.573, 0.316, 0.617, 0.679, 0.292, 0.345, 0.293, 0.331, 0.274, 0.376, 0.28, 0.261, 0.635, 0.261, 0.315, 0.681, 0.593, 0.313, 0.335, 0.348, 0.308, 0.344, 0.315, 0.303, 0.317, 0.281, 0.39, 0.259, 0.62, 0.393, 0.3, 0.666, 0.378, 0.363, 0.295, 0.314, 0.29, 0.292, 0.488, 0.652, 0.405, 0.325, 0.27, 0.349, 0.314, 0.25, 0.269, 0.7, 0.352, 0.275, 0.305, 0.653, 0.295, 0.301, 0.378, 0.675, 0.316, 0.271, 0.281, 0.313, 0.327, 0.317, 0.378, 0.355, 0.394, 0.323, 0.293, 0.585, 0.337, 0.3, 0.284, 0.266]
lvec3 = [0.344, 0.393, 0.464, 0.506, 0.318, 0.471, 0.344, 0.442, 0.288, 0.489, 0.308, 0.365, 0.612, 0.338, 0.312, 0.389, 0.336, 0.315, 0.311, 0.381, 0.439, 0.406, 0.405, 0.291, 0.472, 0.386, 0.421, 0.295, 0.411, 0.342, 0.296, 0.486, 0.327, 0.461, 0.322, 0.306, 0.474, 0.406, 0.392, 0.351, 0.522, 0.412, 0.356, 0.32, 0.362, 0.297, 0.355, 0.365, 0.358, 0.381, 0.356, 0.482, 0.487, 0.414, 0.339, 0.486, 0.429, 0.36, 0.316, 0.397, 0.397, 0.372, 0.313, 0.361, 0.365, 0.389, 0.368, 0.431, 0.404, 0.551, 0.318, 0.446, 0.38, 0.585, 0.458, 0.424, 0.35, 0.307, 0.545, 0.446, 0.443, 0.432, 0.385, 0.318, 0.417, 0.365, 0.334, 0.446, 0.312, 0.423, 0.328, 0.352, 0.408, 0.373, 0.496, 0.354, 0.394, 0.332, 0.38, 0.362]
lvec4 = [0.345, 0.417, 0.364, 0.339, 0.365, 0.461, 0.363, 0.355, 0.373, 0.376, 0.361, 0.304, 0.63, 0.388, 0.343, 0.374, 0.389, 0.367, 0.384, 0.353, 0.348, 0.304, 0.346, 0.427, 0.353, 0.395, 0.384, 0.36, 0.319, 0.37, 0.359, 0.581, 0.363, 0.34, 0.372, 0.397, 0.883, 0.371, 0.35, 0.333, 0.33, 0.387, 0.336, 0.374, 0.343, 0.352, 0.367, 0.486, 0.386, 0.342, 0.376, 0.399, 0.392, 0.338, 0.348, 0.328, 0.64, 0.335, 0.387, 0.372, 0.401, 0.478, 0.37, 0.402, 0.321, 0.407, 0.334, 0.377, 0.381, 0.356, 0.345, 0.371, 0.355, 0.333, 0.455, 0.642, 0.41, 0.343, 0.466, 0.319, 0.438, 0.326, 0.338, 0.356, 0.391, 0.349, 0.382, 0.305, 0.621, 0.361, 0.391, 0.405, 0.306, 0.342, 0.386, 0.356, 0.355, 0.496, 0.318, 0.304]
lvec5 = [0.332, 0.306, 0.339, 0.394, 0.336, 0.353, 0.363, 0.341, 0.282, 0.385, 0.291, 0.31, 0.269, 0.298, 0.661, 0.427, 0.303, 0.266, 0.316, 0.377, 0.279, 0.529, 0.428, 0.231, 0.363, 0.555, 0.65, 0.231, 0.345, 0.339, 0.335, 0.297, 0.363, 0.662, 0.54, 0.334, 0.318, 0.286, 0.304, 0.36, 0.301, 0.346, 0.468, 0.526, 0.953, 0.576, 0.613, 0.355, 0.306, 0.292, 0.321, 0.352, 0.308, 0.32, 0.474, 0.41, 0.504, 0.335, 0.308, 0.257, 0.406, 0.258, 0.329, 0.359, 0.418, 0.425, 0.639, 0.304, 0.365, 0.269, 0.332, 0.344, 0.337, 0.355, 0.367, 0.796, 0.324, 0.322, 0.355, 0.344, 0.316, 0.406, 0.423, 0.375, 0.28, 0.318, 0.324, 0.306, 0.261, 0.332, 0.296, 0.324, 0.343, 0.273, 0.258, 0.565, 0.396, 0.374, 0.393, 0.335]
lvec6 = [0.297, 0.475, 0.317, 0.537, 0.266, 0.398, 0.33, 0.318, 0.292, 0.351, 0.327, 0.294, 0.272, 0.317, 0.328, 0.372, 0.463, 0.529, 0.294, 0.303, 0.334, 0.346, 0.784, 0.295, 0.658, 0.325, 0.406, 0.331, 0.311, 0.359, 0.334, 0.538, 0.307, 0.299, 0.259, 0.316, 0.28, 0.318, 0.249, 0.227, 0.543, 0.287, 0.716, 0.309, 0.599, 0.283, 0.517, 0.329, 0.435, 0.583, 0.648, 0.575, 0.567, 0.388, 0.373, 0.337, 0.462, 0.339, 0.35, 0.628, 0.372, 0.436, 0.384, 0.285, 0.318, 0.471, 0.57, 0.31, 0.315, 0.308, 0.409, 0.343, 0.784, 0.351, 0.298, 0.444, 0.319, 0.346, 0.377, 0.638, 0.298, 0.433, 0.474, 0.482, 0.304, 0.296, 0.368, 0.339, 0.282, 0.393, 0.616, 0.263, 0.365, 0.53, 0.38, 0.283, 0.278, 0.34, 0.248, 0.52]

bins = np.linspace(0.1, 0.8, 100) 
fig, axs = plt.subplots(7,figsize=(6,12))
plt.rcParams["figure.autolayout"] = True
axs[0].hist(lvec1, bins, alpha=0.5, color='red', label='Design 1')
axs[1].hist(lvec2, bins, alpha=0.5, color='green', label='Design 2')
axs[2].hist(lvec3, bins, alpha=0.5, color='blue', label='Design 3')
axs[3].hist(lvec4, bins, alpha=0.5, color='gray', label='Design 4')
axs[4].hist(lvec5, bins, alpha=0.5, color='orange', label='Design 5')
axs[5].hist(lvec6, bins, alpha=0.5, color='purple', label='Design 6')
axs[6].hist(lvec0, bins, alpha=0.5, color='black', label='No Additional Data')
axs[0].set_title('Design 1')
axs[1].set_title('Design 2')
axs[2].set_title('Design 3')
axs[3].set_title('Design 4')
axs[4].set_title('Design 5')
axs[5].set_title('Design 6')
axs[6].set_title('No Additional Data')
for i in range(7):
    axs[i].set_ylim([0,20])
fig.suptitle('Bayesian loss: 6 tests, Omega=100, Classification',fontsize=16)
fig.tight_layout()
plt.show()
'''

'''
# FOR 30 TESTS WITH ALIGNED PRIOR DRAWS, USING CLASSIFICATION LOSS W/ t=10%
lvec0 = [0.372, 0.38, 0.372, 0.375, 0.334, 0.394, 0.394, 0.397, 0.344, 0.364, 0.372, 0.413, 0.434, 0.358, 0.365, 0.417, 0.411, 0.43, 0.37, 0.42, 0.43, 0.413, 0.372, 0.407, 0.407, 0.361, 0.382, 0.4, 0.403, 0.357, 0.357, 0.361, 0.377, 0.363, 0.379, 0.37, 0.357, 0.437, 0.407, 0.373, 0.356, 0.399, 0.403, 0.414, 0.356, 0.417, 0.357, 0.394, 0.414, 0.406, 0.412, 0.376, 0.351, 0.406, 0.377, 0.396, 0.39, 0.392, 0.404, 0.413, 0.393, 0.409, 0.373, 0.356, 0.389, 0.383, 0.366, 0.362, 0.417, 0.428, 0.374, 0.343, 0.411, 0.361, 0.386, 0.389, 0.333, 0.38, 0.368, 0.365, 0.443, 0.326, 0.399, 0.399, 0.357, 0.394, 0.384, 0.37, 0.419, 0.386, 0.345, 0.384, 0.389, 0.369, 0.4, 0.377, 0.402, 0.419, 0.458, 0.357]
lvec1 = [0.342, 0.289, 0.357, 0.363, 0.324, 0.4, 0.33, 0.387, 0.328, 0.327, 0.308, 0.257, 0.261, 0.355, 0.383, 0.489, 0.28, 0.338, 0.283, 0.368, 0.327, 0.33, 0.316, 0.352, 0.459, 0.272, 0.94, 0.355, 0.497, 0.272, 0.318, 0.256, 0.298, 0.354, 0.285, 0.328, 0.374, 0.296, 0.329, 0.356, 0.985, 0.296, 0.416, 0.435, 0.334, 0.265, 0.325, 0.257, 0.38, 0.412, 0.297, 0.303, 0.344, 0.357, 0.448, 0.402, 0.312, 0.281, 0.372, 0.342, 0.275, 0.365, 0.74, 0.323, 0.478, 0.343, 0.338, 0.282, 0.457, 0.299, 0.357, 0.325, 0.621, 0.308, 0.415, 0.822, 0.391, 0.281, 0.327, 0.484, 0.365, 0.368, 0.323, 0.32, 0.336, 0.318, 0.623, 0.725, 0.346, 0.404, 0.32, 0.376, 0.504, 0.371, 0.316, 0.319, 0.538, 0.719, 0.307, 0.294]
lvec2 = [0.168, 0.606, 0.405, 0.436, 0.578, 0.494, 0.215, 0.236, 0.241, 0.65, 0.187, 0.202, 0.646, 0.175, 0.21, 0.248, 0.202, 0.17, 0.179, 0.237, 0.242, 0.476, 0.174, 0.214, 0.206, 0.211, 0.662, 0.175, 0.189, 0.227, 0.416, 0.35, 0.399, 0.389, 0.194, 0.241, 0.395, 0.225, 0.195, 0.179, 0.769, 0.168, 0.188, 0.458, 0.357, 0.227, 0.173, 0.406, 0.513, 0.618, 0.185, 0.206, 0.426, 0.228, 0.359, 0.366, 0.191, 0.23, 0.358, 0.414, 0.174, 0.197, 0.254, 0.162, 0.335, 0.235, 0.419, 0.567, 0.212, 0.182, 0.191, 0.22, 0.212, 0.199, 0.192, 0.785, 0.229, 0.186, 0.154, 0.269, 0.233, 0.589, 0.18, 0.352, 0.441, 0.169, 0.211, 0.161, 0.21, 0.39, 0.206, 0.175, 0.593, 0.552, 0.354, 0.333, 0.235, 0.223, 0.176, 0.195]
lvec3 = [0.382, 0.304, 0.409, 0.636, 0.483, 0.391, 0.291, 0.325, 0.34, 0.347, 0.35, 0.258, 0.404, 0.405, 0.592, 0.893, 0.278, 0.445, 0.326, 0.443, 0.561, 0.432, 0.307, 0.303, 0.365, 0.389, 0.634, 0.316, 0.387, 0.307, 0.306, 0.416, 0.578, 0.341, 0.301, 0.276, 0.34, 0.486, 0.278, 0.262, 0.386, 0.222, 0.372, 0.449, 0.513, 0.311, 0.362, 0.4, 0.348, 0.276, 0.271, 0.311, 0.397, 0.333, 0.281, 0.284, 0.348, 0.418, 0.297, 0.345, 0.264, 0.327, 0.447, 0.39, 0.395, 0.318, 0.365, 0.396, 0.358, 0.298, 0.347, 0.352, 0.326, 0.306, 0.437, 0.6, 0.455, 0.304, 0.367, 0.321, 0.344, 0.515, 0.408, 0.256, 0.608, 0.286, 0.405, 0.355, 0.355, 0.322, 0.407, 0.33, 0.611, 0.472, 0.361, 0.436, 0.475, 0.396, 0.419, 0.332]
lvec4 = [0.271, 0.287, 0.366, 0.34, 0.341, 0.338, 0.322, 0.312, 0.374, 0.336, 0.307, 0.378, 0.347, 0.305, 0.338, 0.363, 0.69, 0.297, 0.388, 0.387, 0.326, 0.343, 0.441, 0.438, 0.342, 0.341, 0.332, 0.361, 0.322, 0.326, 0.457, 0.34, 0.357, 0.342, 0.461, 0.352, 0.412, 0.322, 0.353, 0.296, 0.316, 0.38, 0.753, 0.354, 0.308, 0.277, 0.561, 0.851, 0.309, 0.334, 0.402, 0.472, 0.354, 0.321, 0.796, 0.296, 0.348, 0.352, 0.322, 0.413, 0.842, 0.297, 0.379, 0.344, 0.353, 0.31, 0.322, 0.456, 0.328, 0.378, 0.328, 0.342, 0.422, 0.314, 0.423, 0.364, 0.304, 0.46, 0.401, 0.313, 0.319, 0.358, 0.614, 0.349, 0.367, 0.29, 0.315, 0.355, 0.368, 0.359, 0.384, 0.352, 0.387, 0.329, 0.298, 0.348, 0.354, 0.35, 0.372, 0.33]
lvec5 = [0.415, 0.19, 0.57, 0.475, 0.307, 0.362, 0.155, 0.256, 0.215, 0.196, 0.363, 0.223, 0.308, 0.545, 0.228, 0.255, 0.349, 0.142, 0.207, 0.319, 0.159, 0.301, 0.357, 0.134, 0.226, 0.387, 0.156, 0.182, 0.208, 0.305, 0.32, 0.477, 0.179, 0.18, 0.177, 0.325, 0.489, 0.279, 0.356, 0.29, 0.216, 0.284, 0.294, 0.236, 0.653, 0.147, 0.47, 0.331, 0.169, 0.588, 0.157, 0.63, 0.555, 0.424, 0.347, 0.422, 0.537, 0.145, 0.163, 0.547, 0.18, 0.196, 0.402, 0.178, 0.205, 0.354, 0.432, 0.294, 0.188, 0.189, 0.56, 0.49, 0.653, 0.223, 0.89, 0.339, 0.278, 0.446, 0.234, 0.841, 0.215, 0.425, 0.249, 0.158, 0.323, 0.154, 0.158, 0.256, 0.292, 0.677, 0.126, 0.182, 0.173, 0.22, 0.33, 0.22, 0.698, 0.325, 0.463, 0.165]
lvec6 = [0.179, 0.175, 0.376, 0.4, 0.662, 0.809, 0.509, 0.197, 0.181, 0.49, 0.204, 0.186, 0.395, 0.182, 0.493, 0.188, 0.433, 0.16, 0.673, 0.181, 0.433, 0.2, 0.664, 0.165, 0.252, 0.444, 0.698, 0.185, 0.414, 0.333, 0.358, 0.203, 0.406, 0.275, 0.171, 0.202, 0.623, 0.198, 0.217, 0.185, 0.787, 0.206, 0.173, 0.484, 0.198, 0.156, 0.399, 0.205, 0.612, 0.206, 0.216, 0.158, 0.549, 0.698, 0.495, 0.369, 0.34, 0.227, 0.409, 0.211, 0.188, 0.203, 0.281, 0.16, 0.197, 0.173, 0.412, 0.354, 0.371, 0.413, 0.463, 0.216, 0.226, 0.195, 0.19, 0.339, 0.322, 0.226, 0.178, 0.459, 0.208, 0.395, 0.186, 0.614, 0.16, 0.154, 0.261, 0.57, 0.322, 0.213, 0.362, 0.225, 0.679, 0.273, 0.478, 0.207, 0.566, 0.24, 0.585, 0.481]

bins = np.linspace(0.1, 0.8, 100) 
fig, axs = plt.subplots(7,figsize=(6,12))
plt.rcParams["figure.autolayout"] = True
axs[0].hist(lvec1, bins, alpha=0.5, color='red', label='Design 1')
axs[1].hist(lvec2, bins, alpha=0.5, color='green', label='Design 2')
axs[2].hist(lvec3, bins, alpha=0.5, color='blue', label='Design 3')
axs[3].hist(lvec4, bins, alpha=0.5, color='gray', label='Design 4')
axs[4].hist(lvec5, bins, alpha=0.5, color='orange', label='Design 5')
axs[5].hist(lvec6, bins, alpha=0.5, color='purple', label='Design 6')
axs[6].hist(lvec0, bins, alpha=0.5, color='black', label='No Additional Data')
axs[0].set_title('Design 1')
axs[1].set_title('Design 2')
axs[2].set_title('Design 3')
axs[3].set_title('Design 4')
axs[4].set_title('Design 5')
axs[5].set_title('Design 6')
axs[6].set_title('No Additional Data')
for i in range(7):
    axs[i].set_ylim([0,20])
fig.suptitle('Bayesian loss: 30 tests, Omega=100, Classification',fontsize=16)
fig.tight_layout()
plt.show()
'''